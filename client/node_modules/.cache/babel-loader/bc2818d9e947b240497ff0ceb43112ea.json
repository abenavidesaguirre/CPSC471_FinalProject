{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haniy\\\\Desktop\\\\Model_Pull\\\\CPSC471_FinalProject\\\\client\\\\src\\\\components\\\\LoginPage.js\";\nimport React from \"react\"; // import { observer } from 'mobx-react'\n// import UserStore from './stores/UserStore';\n// import LoginForm from './stores/LoginForm';\n// import SubmitButton from './stores/SubmitButton';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport \"./styling/RegistrationCSS.css\";\nimport { setUsername, setPassword } from \"../App.js\"; // class LoginPage extends React.Component{\n//     async componentDidMount() {\n//         try{\n//           let res = await fetch('/isLoggedIn', {\n//             method: 'post',\n//             headers: {\n//               'Accept': 'application/json',\n//               'Content-Type': 'application/json'\n//             }\n//           });\n//           let result = await res.json();\n//           if (result && result.success) {\n//             UserStore.loading = false;\n//             UserStore.isLoggedIn = true;\n//             UserStore.username = result.username;\n//           }\n//           else {\n//             UserStore.loading = false;\n//             UserStore.isLoggedIn = false;\n//           }\n//         }\n//         catch(e) {\n//           UserStore.loading = false;\n//           UserStore.isLoggedIn = false;\n//         }\n//       }\n//       async doLogout() {\n//         try{\n//           let res = await fetch('/logout', {\n//             method: 'post',\n//             headers: {\n//               'Accept': 'application/json',\n//               'Content-Type': 'application/json'\n//             }\n//           });\n//           let result = await res.json();\n//           if (result && result.success) {\n//             UserStore.isLoggedIn = false;\n//             UserStore.username = '';\n//           }\n//         }\n//         catch(e) {\n//           console.log(e);\n//         }\n//       }\n//       render() {\n//         if (UserStore.loading) {\n//           return (\n//             <div className=\"app\">\n//               <div className = 'container'>\n//                 Loading, please wait...\n//               </div>\n//             </div>\n//           );\n//         }\n//         else {\n//           if (UserStore.isLoggedIn) {\n//             return (\n//               <div className=\"app\">\n//                 <div className = 'container'>\n//                   Welcome {UserStore.username}\n//                   <SubmitButton\n//                     text = { 'Log out'}\n//                     disabled = {false}\n//                     onClick = { () => this.doLogout() }\n//                     />\n//                 </div>\n//               </div>\n//             );\n//           }\n//         }\n//     }\n// }\n// export default LoginForm;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationPage = _ref => {\n  let {\n    times\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registrationRoot\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"username\",\n          placeholder: \"Username\",\n          required: true,\n          onChange: e => {\n            setUsername(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 3\n        }, this), \"/>\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          required: true,\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonDiv\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"subButton\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n};\n\n_c = RegistrationPage;\nexport default RegistrationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"sources":["C:/Users/Haniy/Desktop/Model_Pull/CPSC471_FinalProject/client/src/components/LoginPage.js"],"names":["React","Form","Button","setUsername","setPassword","RegistrationPage","times","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,+BAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,WAAvC,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;AAEA,MAAMC,gBAAgB,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACtC,sBACA;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,IAAD;AAAA,8BACF,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,mBAAvC;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,WAAW,EAAC,UAA1C;AAAqD,UAAA,QAAQ,MAA7D;AACA,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACfJ,YAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AAHD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,eASF,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,mBAAvC;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,WAAW,EAAC,UAA1C;AAAqD,UAAA,QAAQ,MAA7D;AACA,UAAA,QAAQ,EAAGF,CAAD,IAAO;AACGH,YAAAA,WAAW,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AAHnB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATE;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAoBF;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBE;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA4BD,CA7BD;;KAAMJ,gB;AA+BN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\r\n// import { observer } from 'mobx-react'\r\n// import UserStore from './stores/UserStore';\r\n// import LoginForm from './stores/LoginForm';\r\n// import SubmitButton from './stores/SubmitButton';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport \"./styling/RegistrationCSS.css\"\r\nimport {setUsername, setPassword} from \"../App.js\"\r\n\r\n// class LoginPage extends React.Component{\r\n//     async componentDidMount() {\r\n\r\n//         try{\r\n//           let res = await fetch('/isLoggedIn', {\r\n//             method: 'post',\r\n//             headers: {\r\n//               'Accept': 'application/json',\r\n//               'Content-Type': 'application/json'\r\n//             }\r\n//           });\r\n//           let result = await res.json();\r\n    \r\n//           if (result && result.success) {\r\n//             UserStore.loading = false;\r\n//             UserStore.isLoggedIn = true;\r\n//             UserStore.username = result.username;\r\n//           }\r\n    \r\n//           else {\r\n//             UserStore.loading = false;\r\n//             UserStore.isLoggedIn = false;\r\n//           }\r\n//         }\r\n    \r\n//         catch(e) {\r\n//           UserStore.loading = false;\r\n//           UserStore.isLoggedIn = false;\r\n    \r\n//         }\r\n//       }\r\n    \r\n//       async doLogout() {\r\n    \r\n//         try{\r\n//           let res = await fetch('/logout', {\r\n//             method: 'post',\r\n//             headers: {\r\n//               'Accept': 'application/json',\r\n//               'Content-Type': 'application/json'\r\n//             }\r\n//           });\r\n//           let result = await res.json();\r\n      \r\n//           if (result && result.success) {\r\n//             UserStore.isLoggedIn = false;\r\n//             UserStore.username = '';\r\n//           }\r\n      \r\n//         }\r\n      \r\n//         catch(e) {\r\n//           console.log(e);\r\n      \r\n//         }\r\n//       }\r\n    \r\n//       render() {\r\n    \r\n//         if (UserStore.loading) {\r\n//           return (\r\n//             <div className=\"app\">\r\n//               <div className = 'container'>\r\n//                 Loading, please wait...\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         }\r\n    \r\n//         else {\r\n    \r\n//           if (UserStore.isLoggedIn) {\r\n//             return (\r\n//               <div className=\"app\">\r\n//                 <div className = 'container'>\r\n//                   Welcome {UserStore.username}\r\n//                   <SubmitButton\r\n//                     text = { 'Log out'}\r\n//                     disabled = {false}\r\n//                     onClick = { () => this.doLogout() }\r\n//                     />\r\n//                 </div>\r\n//               </div>\r\n//             );\r\n//           }\r\n//         }\r\n//     }\r\n        \r\n// }\r\n      \r\n// export default LoginForm;\r\n\r\nconst RegistrationPage = ({ times }) => {\r\n  return (\r\n  <div className=\"registrationRoot\">\r\n  <h1>Login</h1>\r\n  <Form>\r\n<Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n  <Form.Label>Username</Form.Label>\r\n  <Form.Control type=\"username\" placeholder=\"Username\" required \r\n  onChange={(e) => {\r\n    setUsername(e.target.value);\r\n  }}/>/>\r\n</Form.Group>\r\n\r\n<Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n  <Form.Label>Password</Form.Label>\r\n  <Form.Control type=\"password\" placeholder=\"Password\" required\r\n  onChange={(e) => {\r\n                      setPassword(e.target.value);\r\n                    }}/>\r\n</Form.Group>\r\n</Form>\r\n\r\n<div className=\"buttonDiv\">\r\n  <Button type=\"submit\" className=\"subButton\">\r\n    Login\r\n  </Button>\r\n  </div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default RegistrationPage;"]},"metadata":{},"sourceType":"module"}