{"ast":null,"code":"var _jsxFileName = \"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Calendar/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createRef, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins \n\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport \"./Calendar.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarPage = _ref => {\n  _s();\n\n  let {\n    times\n  } = _ref;\n  // const [eventTimes] = useState([\n  //   { title: '2 Hour Guided Hike', start: '2022-01-16T8:00:00', end: '2022-01-16T10:00:00' },\n  //   { title: 'Ice Skating', start: '2022-01-03T13:00:00', end: '2022-01-03T16:00:00' },\n  //   { title: 'Adult Ski Lessons', start: '2022-01-07T8:00:00', end: '2022-01-07T16:00:00' },\n  //   { title: 'Kids Ski Lessons', start: '2022-01-12T10:00:00', end: '2022-01-12T14:00:00' }\n  // ])\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [eventTimes, setEventTimes] = useState([]);\n  const [tourGuideShifts, setTourGuideShifts] = useState([]);\n  const [staffInfo, setStaffInfo] = useState([]);\n  const [chosenShift, setChosenShift] = useState(\"\");\n  const [shifts, setShifts] = useState([]);\n  const Username = localStorage.getItem(\"username\");\n  var StaffID;\n  const navigate = useNavigate();\n  useEffect(() => {\n    // console.log(Username)\n    // Axios.get(`http://localhost:3001/staff/${Username}`)\n    // .then((response) => {\n    //     setStaffInfo(response.data);\n    // });\n    // staffInfo.map((val) => {\n    //   StaffID = val.StaffID;\n    // })\n    Axios.get(`http://localhost:3001/staff/${localStorage.getItem(\"username\")}`).then(response => {\n      setStaffInfo(response.data);\n    });\n    Axios.get(\"http://localhost:3001/calendarTimes\").then(response => {\n      setTimeSlots(response.data);\n    });\n    Axios.get(\"http://localhost:3001/tourGuideShifts\").then(response => {\n      setTourGuideShifts(response.data);\n    });\n  }, []);\n\n  const addEvent = (name, start, end) => {\n    setEventTimes([...eventTimes, {\n      title: name,\n      start: start,\n      end: end\n    }]);\n  };\n\n  const mapTimes = e => {\n    e.preventDefault();\n    timeSlots.map(val => {\n      addEvent(val.ExcursionName, val.Date.substr(0, 10) + 'T' + val.Start + \":00:00\", val.Date.substr(0, 10) + 'T' + val.End + \":00:00\"); // setEventTimes([...eventTimes, {\n      //   title: val.ExcursionName, start: val.Date.substr(0,10)+'T'+val.Start+\":00:00\", end: val.Date.substr(0,10)+'T'+val.End+\":00:00\"\n      // }\n      // ]) \n    });\n  };\n\n  const selectShift = e => {\n    e.preventDefault();\n    staffInfo.map(val => {\n      StaffID = val.StaffID;\n    });\n\n    if (chosenShift !== \"\") {\n      Axios.post(\"http://localhost:3001/shiftSignUp\", {\n        StaffID: StaffID,\n        Shift: chosenShift\n      }).then(() => {\n        setShifts([...shifts, {\n          StaffID: StaffID,\n          Shift: chosenShift\n        }]);\n      });\n      navigate(\"/staffDash\");\n    }\n  };\n\n  const calendarRef = /*#__PURE__*/createRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Activity Calendar \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        height: 750,\n        contentHeight: 750,\n        plugins: [dayGridPlugin, timeGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: times,\n        customButtons: {\n          myTimeDayBtn: {\n            text: \"timeDay\",\n\n            click() {\n              const calendar = calendarRef.current;\n\n              if (calendar) {\n                const calendarApi = calendar.getApi();\n                calendarApi.changeView(\"timeGridDay\");\n              }\n            }\n\n          },\n          myTimeWeekBtn: {\n            text: \"timeWeek\",\n\n            click() {\n              const calendar = calendarRef.current;\n\n              if (calendar) {\n                const calendarApi = calendar.getApi();\n                calendarApi.changeView(\"timeGridWeek\");\n              }\n            }\n\n          }\n        },\n        headerToolbar: {\n          left: \"prev next\",\n          center: \"title\",\n          right: \"today dayGridDay dayGridWeek dayGridMonth\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Shift Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicShift\",\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          type: \"text\",\n          onChange: e => setChosenShift(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select A Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), tourGuideShifts.map(tourGuideShifts => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tourGuideShifts.TimeSlotID,\n            children: [tourGuideShifts.Date.substr(0, 10), \" : \", tourGuideShifts.Start, \":00-\", tourGuideShifts.End, \":00 MST\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 55\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"selectButton\",\n          onClick: e => selectShift(e),\n          children: \"Select Shift\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalendarPage, \"bry7OGQK1yL8XTd93iUEgLlP5/E=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CalendarPage;\nexport default CalendarPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"sources":["/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Calendar/Calendar.js"],"names":["React","useState","createRef","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","Form","Axios","useNavigate","CalendarPage","times","timeSlots","setTimeSlots","eventTimes","setEventTimes","tourGuideShifts","setTourGuideShifts","staffInfo","setStaffInfo","chosenShift","setChosenShift","shifts","setShifts","Username","localStorage","getItem","StaffID","navigate","get","then","response","data","addEvent","name","start","end","title","mapTimes","e","preventDefault","map","val","ExcursionName","Date","substr","Start","End","selectShift","post","Shift","calendarRef","myTimeDayBtn","text","click","calendar","current","calendarApi","getApi","changeView","myTimeWeekBtn","left","center","right","target","value","TimeSlotID"],"mappings":"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","sourcesContent":["import React, {useState, createRef, useEffect} from 'react';\nimport FullCalendar from '@fullcalendar/react' // must go before plugins \nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport \"./Calendar.css\"\nimport Form from \"react-bootstrap/Form\"\nimport  Axios  from 'axios';\nimport { useNavigate } from 'react-router';\n\nconst CalendarPage = ({ times }) => {\n\n  // const [eventTimes] = useState([\n  //   { title: '2 Hour Guided Hike', start: '2022-01-16T8:00:00', end: '2022-01-16T10:00:00' },\n  //   { title: 'Ice Skating', start: '2022-01-03T13:00:00', end: '2022-01-03T16:00:00' },\n  //   { title: 'Adult Ski Lessons', start: '2022-01-07T8:00:00', end: '2022-01-07T16:00:00' },\n  //   { title: 'Kids Ski Lessons', start: '2022-01-12T10:00:00', end: '2022-01-12T14:00:00' }\n  // ])\n\n      const [timeSlots, setTimeSlots] = useState([]);\n      const [eventTimes, setEventTimes] = useState([]);\n      const [tourGuideShifts, setTourGuideShifts] = useState([]);\n      const [staffInfo, setStaffInfo] = useState([]);\n      const [chosenShift, setChosenShift] = useState(\"\");\n      const [shifts, setShifts] = useState([]);\n      const Username = localStorage.getItem(\"username\")\n      var StaffID;\n\n      const navigate = useNavigate();\n\n      useEffect(() => {\n        // console.log(Username)\n        // Axios.get(`http://localhost:3001/staff/${Username}`)\n        // .then((response) => {\n        //     setStaffInfo(response.data);\n        // });\n\n        // staffInfo.map((val) => {\n        //   StaffID = val.StaffID;\n        // })\n\n        Axios.get(`http://localhost:3001/staff/${localStorage.getItem(\"username\")}`)\n        .then((response) => {\n            setStaffInfo(response.data);\n        });\n\n\n        Axios.get(\"http://localhost:3001/calendarTimes\").then((response) => {\n          setTimeSlots(response.data);\n        });\n       \n\n        Axios.get(\"http://localhost:3001/tourGuideShifts\").then((response) => {\n          setTourGuideShifts(response.data);\n        });\n        \n       \n\n      }, [])\n\n      \n      const addEvent =(name, start, end)=> {\n        setEventTimes([...eventTimes, {\n          title: name, start: start, end: end\n        }\n        ])\n        }\n      \n\n      const mapTimes=(e)=> {\n        e.preventDefault();\n    \n        timeSlots.map((val) => {\n         \n          addEvent(val.ExcursionName, val.Date.substr(0,10)+'T'+val.Start+\":00:00\", val.Date.substr(0,10)+'T'+val.End+\":00:00\" );\n          // setEventTimes([...eventTimes, {\n          //   title: val.ExcursionName, start: val.Date.substr(0,10)+'T'+val.Start+\":00:00\", end: val.Date.substr(0,10)+'T'+val.End+\":00:00\"\n          // }\n          // ]) \n        })\n\n   \n      }\n\n      const selectShift=(e)=>{\n        e.preventDefault();\n       \n        \n\n        staffInfo.map((val) => {\n          StaffID = val.StaffID;\n        })\n        \n        if(chosenShift!==\"\"){\n        Axios.post(\"http://localhost:3001/shiftSignUp\", {\n          StaffID: StaffID,\n          Shift: chosenShift,\n        }).then(()=> {\n          setShifts([\n            ...shifts,\n            {\n              StaffID: StaffID,\n              Shift: chosenShift,\n            },\n          ]);\n        }); \n        navigate(\"/staffDash\")\n      }\n      }\n\n        const calendarRef = createRef();\n      return (\n        \n        <div className=\"calendar\">\n          <h2> Activity Calendar </h2>\n         <div className=\"content\">\n         <FullCalendar\n            ref={calendarRef}\n            height={750}\n            contentHeight={750}\n            plugins={[ dayGridPlugin, timeGridPlugin ]}\n            initialView=\"dayGridMonth\"\n            events={times}\n            customButtons = {{\n              myTimeDayBtn: {\n                text: \"timeDay\",\n                click() {\n                  const calendar = calendarRef.current;\n                  if(calendar) {\n                    const calendarApi = calendar.getApi();\n    \n                    calendarApi.changeView(\"timeGridDay\");\n                  }\n                },\n              },\n              myTimeWeekBtn: {\n                text: \"timeWeek\",\n                click() { \n                  const calendar = calendarRef.current;\n                  if(calendar) {\n                    const calendarApi = calendar.getApi();\n    \n                    calendarApi.changeView(\"timeGridWeek\");\n                  }\n                },\n              },\n            }}\n            headerToolbar={{\n              left: \"prev next\",\n              center: \"title\",\n              right: \"today dayGridDay dayGridWeek dayGridMonth\",\n            }}\n          />\n          \n         </div>\n         <div className=\"signup\">\n           <h2> Shift Sign Up</h2>\n           <Form.Group className=\"mb-3\" controlId=\"formBasicShift\">\n            <Form.Select type=\"text\" onChange={(e)=>setChosenShift(e.target.value)}>\n              <option>Select A Shift</option>\n              {tourGuideShifts.map((tourGuideShifts=> <option value={tourGuideShifts.TimeSlotID}>{tourGuideShifts.Date.substr(0,10)} : {tourGuideShifts.Start}:00-{tourGuideShifts.End}:00 MST</option>))}\n            </Form.Select>\n          </Form.Group>\n          <div className=\"selectDiv\">\n            <button className=\"selectButton\" onClick={(e)=>selectShift(e)}>Select Shift</button>\n          </div>\n         </div>\n        </div>\n      );\n    }\n   \n  export default CalendarPage"]},"metadata":{},"sourceType":"module"}