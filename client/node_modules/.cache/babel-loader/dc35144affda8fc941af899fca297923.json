{"ast":null,"code":"var _jsxFileName = \"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Registration/Registration.js\",\n    _s = $RefreshSig$();\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport \"./Registration.css\";\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registration = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [customerList, setCustomerList] = useState([]);\n  const [accountList, setAccountList] = useState([]);\n  const [emergList, setEmergList] = useState([]);\n  const [customerCount, setCustomerCount] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [streetAddress, setStreetAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [emergeName, setEmergeName] = useState(\"\");\n  const [emergePhone, setEmergePhone] = useState(\"\");\n  const [emergeRel, setEmergeRel] = useState(\"\");\n  const [hotelID, setHotelID] = useState();\n  const [hotels, setHotels] = useState([]);\n  useEffect(() => {\n    Axios.get(`http://localhost:3001/hotels`).then(response => {\n      setHotels(response.data);\n    });\n    Axios.get(`http://localhost:3001/customerCount`).then(response => {\n      setCustomerCount(response.data);\n    });\n    console.log(customerCount);\n  }, []);\n\n  const register = e => {\n    e.preventDefault();\n    var custCount = 0;\n    customerCount.map(val => {\n      custCount = val.Count;\n    });\n    console.log(\"Printing: \" + custCount);\n    console.log(email);\n    console.log(firstName);\n    console.log(lastName);\n    console.log(dob);\n    console.log(username);\n    console.log(password);\n    console.log(streetAddress);\n    console.log(city);\n    console.log(country);\n    console.log(postalCode);\n    console.log(phoneNumber);\n    console.log(emergeName);\n    console.log(emergePhone);\n    console.log(emergeRel);\n    console.log(hotelID);\n\n    if (email !== \"\" && firstName !== \"\" && lastName !== \"\" && dob !== \"\" && username !== \"\" && password !== \"\" && streetAddress !== \"\" && city !== \"\") {\n      if (country !== \"\" && postalCode !== \"\" && phoneNumber !== \"\" && emergeName !== \"\" && emergePhone !== \"\" && emergeRel !== \"\") {\n        Axios.post(\"http://localhost:3001/registerAccount\", {\n          Username: username,\n          Password: password,\n          Email: email,\n          AccessLevel: \"Customer\"\n        }).then(() => {\n          setAccountList([...accountList, {\n            Username: username,\n            Password: password,\n            Email: email,\n            AccessLevel: \"Customer\"\n          }]);\n        });\n        Axios.post(\"http://localhost:3001/registerCustomer\", {\n          CustomerID: custCount + 1,\n          FirstName: firstName,\n          LastName: lastName,\n          Address: streetAddress,\n          City: city,\n          Country: country,\n          PostalCode: postalCode,\n          PhoneNumber: phoneNumber,\n          DOB: dob,\n          HotelID: hotelID,\n          AccountUsername: username\n        }).then(() => {\n          setCustomerList([...customerList, {\n            FirstName: firstName,\n            LastName: lastName,\n            Address: streetAddress,\n            City: city,\n            Country: country,\n            PostalCode: postalCode,\n            PhoneNumber: phoneNumber,\n            DOB: dob,\n            HotelID: hotelID,\n            AccountUsername: username\n          }]);\n        });\n        Axios.post(\"http://localhost:3001/registerEmergContact\", {\n          EmergencyName: emergeName,\n          EmergencyPhone: emergePhone,\n          Relationship: emergeRel,\n          CustomerID: custCount + 1\n        }).then(() => {\n          setEmergList([...emergList, {\n            EmergencyName: emergeName,\n            EmergencyPhone: emergePhone,\n            Relationship: emergeRel,\n            CustomerID: custCount + 1\n          }]);\n        });\n        navigate(\"/\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registrationRoot\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Personal Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"First Name\",\n          onChange: e => setFirstName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Last Name\",\n          onChange: e => setLastName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicDOB\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date of Birth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          placeholder: \"DOB\",\n          onChange: e => setDob(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Username\",\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formAddress\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Street Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Address\",\n          onChange: e => setStreetAddress(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formAddress\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"City\",\n          onChange: e => setCity(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formAddress\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Country\",\n          onChange: e => setCountry(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formAddress\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Postal Code: A1A 1A1\",\n          pattern: \"[A-Z]{1}[0-9]{1}[A-Z]{1} [0-9]{1}[A-Z]{1}[0-9]{1}\",\n          onChange: e => setPostalCode(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPhone\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"tel\",\n          placeholder: \"Phone: 123-123-1234\",\n          pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n          onChange: e => setPhoneNumber(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Emergency Contact Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Name\",\n          onChange: e => setEmergeName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPhone\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"tel\",\n          placeholder: \"Phone: 123-123-1234\",\n          pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n          onChange: e => setEmergePhone(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicRelation\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Relationship\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Relationship\",\n          onChange: e => setEmergeRel(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hotel Information (Optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicHotelID\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Hotel Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          type: \"text\",\n          onChange: e => setHotelID(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 7\n          }, this), hotels.map(hotels => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: hotels.PartnerID,\n            children: hotels.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"regButton\",\n          onClick: e => register(e),\n          children: \"Register!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Registration, \"Xr1kuCIVj8djySRFtndEn5Lo2wY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Registration/Registration.js"],"names":["Form","Button","useState","useEffect","Axios","useNavigate","Registration","navigate","customerList","setCustomerList","accountList","setAccountList","emergList","setEmergList","customerCount","setCustomerCount","email","setEmail","firstName","setFirstName","lastName","setLastName","dob","setDob","username","setUsername","password","setPassword","streetAddress","setStreetAddress","city","setCity","country","setCountry","postalCode","setPostalCode","phoneNumber","setPhoneNumber","emergeName","setEmergeName","emergePhone","setEmergePhone","emergeRel","setEmergeRel","hotelID","setHotelID","hotels","setHotels","get","then","response","data","console","log","register","e","preventDefault","custCount","map","val","Count","post","Username","Password","Email","AccessLevel","CustomerID","FirstName","LastName","Address","City","Country","PostalCode","PhoneNumber","DOB","HotelID","AccountUsername","EmergencyName","EmergencyPhone","Relationship","target","value","PartnerID","Name"],"mappings":"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","sourcesContent":["import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport \"./Registration.css\"\nimport { useState, useEffect } from 'react'\nimport  Axios  from 'axios'\nimport { useNavigate } from 'react-router'\n\nconst Registration = () => {\n    const navigate = useNavigate();\n    const [customerList, setCustomerList] = useState([])\n    const [accountList, setAccountList] = useState([])\n    const [emergList, setEmergList] = useState([])\n\n    const [customerCount, setCustomerCount] = useState([])\n\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [dob, setDob] = useState(\"\")\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [streetAddress, setStreetAddress] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [country, setCountry] = useState(\"\")\n    const [postalCode, setPostalCode] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [emergeName, setEmergeName] = useState(\"\")\n    const [emergePhone, setEmergePhone] = useState(\"\")\n    const [emergeRel, setEmergeRel] = useState(\"\")\n    const [hotelID, setHotelID] = useState()\n\n    const [hotels, setHotels] = useState([])\n\n    useEffect(() => {\n      Axios.get(`http://localhost:3001/hotels`)\n      .then((response) => {\n        setHotels(response.data);\n      });\n\n      Axios.get(`http://localhost:3001/customerCount`)\n      .then((response) => {\n        setCustomerCount(response.data);\n      });\n        console.log(customerCount)\n    }, [])\n\n    const register = (e) => {\n      e.preventDefault();\n\n      var custCount = 0;\n      customerCount.map((val) => {\n        custCount = val.Count\n      })\n\n      console.log(\"Printing: \" + custCount)\n      console.log(email)\n      console.log(firstName)\n      console.log(lastName)\n      console.log(dob)\n      console.log(username)\n      console.log(password)\n      console.log(streetAddress)\n      console.log(city)\n      console.log(country)\n      console.log(postalCode)\n      console.log(phoneNumber)\n      console.log(emergeName)\n      console.log(emergePhone)\n      console.log(emergeRel)\n      console.log(hotelID)\n      if(email!==\"\" && firstName!==\"\" && lastName!==\"\" && dob!==\"\" && username!==\"\" && password!==\"\" && streetAddress!==\"\" && city!==\"\"){\n        if(country!==\"\" && postalCode!==\"\" && phoneNumber!==\"\" && emergeName!==\"\" && emergePhone!==\"\" && emergeRel!==\"\"){\n\n          \n          \n\n          Axios.post(\"http://localhost:3001/registerAccount\", {\n            Username: username,\n            Password: password,\n            Email: email,\n            AccessLevel: \"Customer\",\n          }).then(() => {\n            setAccountList([\n              ...accountList,\n              {\n                Username: username,\n                Password: password,\n                Email: email,\n                AccessLevel: \"Customer\",\n              },\n            ]);\n          });\n\n          Axios.post(\"http://localhost:3001/registerCustomer\", {\n            \n            CustomerID: custCount + 1,\n            FirstName: firstName,\n            LastName: lastName,\n            Address: streetAddress,\n            City: city,\n            Country: country,\n            PostalCode: postalCode,\n            PhoneNumber: phoneNumber,\n            DOB: dob,\n            HotelID: hotelID,\n            AccountUsername: username,\n          }).then(()=> {\n            setCustomerList([\n              ...customerList,\n              {\n                FirstName: firstName,\n                LastName: lastName,\n                Address: streetAddress,\n                City: city,\n                Country: country,\n                PostalCode: postalCode,\n                PhoneNumber: phoneNumber,\n                DOB: dob,\n                HotelID: hotelID,\n                AccountUsername: username,\n              },\n            ]);\n          });\n\n          Axios.post(\"http://localhost:3001/registerEmergContact\", {\n          \n            EmergencyName: emergeName,\n            EmergencyPhone: emergePhone,\n            Relationship: emergeRel,\n            CustomerID: custCount + 1,\n          }).then(()=> {\n            setEmergList([\n              ...emergList,\n              {\n                EmergencyName: emergeName,\n                EmergencyPhone: emergePhone,\n                Relationship: emergeRel,\n                CustomerID: custCount + 1,\n              },\n            ]);\n          });\n          navigate(\"/\");\n        }\n      }\n    }\n\n    return (\n    <div className=\"registrationRoot\">\n    <h1>Registration</h1>\n    <h2>Personal Information</h2>\n    <Form>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n    <Form.Label>Email Address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setEmail(e.target.value)} required />\n  </Form.Group>\n  \n  <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n    <Form.Label>First Name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"First Name\" onChange={(e)=>setFirstName(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n    <Form.Label>Last Name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Last Name\" onChange={(e)=>setLastName(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicDOB\">\n    <Form.Label>Date of Birth</Form.Label>\n    <Form.Control type=\"date\" placeholder=\"DOB\" onChange={(e)=>setDob(e.target.value)} required/>\n  </Form.Group>\n\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Username\" onChange={(e)=>setUsername(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e)=>setPassword(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n    <Form.Label>Street Address</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Address\" onChange={(e)=>setStreetAddress(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n    <Form.Label>City</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"City\" onChange={(e)=>setCity(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n    <Form.Label>Country</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Country\" onChange={(e)=>setCountry(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n    <Form.Label>Postal Code</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Postal Code: A1A 1A1\" pattern=\"[A-Z]{1}[0-9]{1}[A-Z]{1} [0-9]{1}[A-Z]{1}[0-9]{1}\" onChange={(e)=>setPostalCode(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\n    <Form.Label>Phone Number</Form.Label>\n    <Form.Control type=\"tel\" placeholder=\"Phone: 123-123-1234\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" onChange={(e)=>setPhoneNumber(e.target.value)} required/>\n  </Form.Group>\n\n  \n\n  <h2>Emergency Contact Information</h2>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n    <Form.Label>Full Name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Name\" onChange={(e)=>setEmergeName(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\n    <Form.Label>Phone Number</Form.Label>\n    <Form.Control type=\"tel\" placeholder=\"Phone: 123-123-1234\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" onChange={(e)=>setEmergePhone(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicRelation\">\n    <Form.Label>Relationship</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Relationship\" onChange={(e)=>setEmergeRel(e.target.value)} required/>\n  </Form.Group>\n\n  <h2>Hotel Information (Optional)</h2>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicHotelID\">\n    <Form.Label>Hotel Name</Form.Label>\n    <Form.Select type=\"text\" onChange={(e)=>setHotelID(e.target.value)}>\n      <option>Select</option>\n      {hotels.map((hotels=> <option value={hotels.PartnerID}>{hotels.Name}</option>))}\n    </Form.Select>\n  </Form.Group>\n  \n  <div className=\"buttonDiv\">\n  <button className=\"regButton\" onClick={(e)=>register(e)}>Register!</button>\n  \n  </div>\n</Form>\n</div>\n    )\n}\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}