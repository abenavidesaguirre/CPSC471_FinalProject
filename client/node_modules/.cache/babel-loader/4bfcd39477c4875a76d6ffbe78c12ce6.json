{"ast":null,"code":"var _jsxFileName = \"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Calendar/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createRef, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins \n\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport \"./Calendar.css\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarPage = _ref => {\n  _s();\n\n  let {\n    times\n  } = _ref;\n  // const [eventTimes] = useState([\n  //   { title: '2 Hour Guided Hike', start: '2022-01-16T8:00:00', end: '2022-01-16T10:00:00' },\n  //   { title: 'Ice Skating', start: '2022-01-03T13:00:00', end: '2022-01-03T16:00:00' },\n  //   { title: 'Adult Ski Lessons', start: '2022-01-07T8:00:00', end: '2022-01-07T16:00:00' },\n  //   { title: 'Kids Ski Lessons', start: '2022-01-12T10:00:00', end: '2022-01-12T14:00:00' }\n  // ])\n  const [timeSlots, setTimeSlots] = useState([]);\n  var [eventTimes] = useState();\n  useEffect(() => {\n    // Axios.get(\"http://localhost:3001/calendarTimes\").then((response) => {\n    //   setTimeSlots(response.data);\n    // });\n    // console.log(timeSlots)\n    Axios.get(\"http://localhost:3001/calendarTimes\").then(data => {\n      eventTimes = {\n        title: data.TimeSlotID,\n        start: data.Date + 'T' + data.Start + ':00:00',\n        end: data.Date + 'T' + data.End + ':00:00'\n      };\n    });\n    console.log(eventTimes);\n  }, []);\n\n  const testTimes = () => {\n    console.log(eventTimes);\n  };\n\n  const calendarRef = /*#__PURE__*/createRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Activity Calendar \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onMouseMove: () => testTimes(),\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        height: 750,\n        contentHeight: 750,\n        plugins: [dayGridPlugin, timeGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: times,\n        customButtons: {\n          myTimeDayBtn: {\n            text: \"timeDay\",\n\n            click() {\n              const calendar = calendarRef.current;\n\n              if (calendar) {\n                const calendarApi = calendar.getApi();\n                calendarApi.changeView(\"timeGridDay\");\n              }\n            }\n\n          },\n          myTimeWeekBtn: {\n            text: \"timeWeek\",\n\n            click() {\n              const calendar = calendarRef.current;\n\n              if (calendar) {\n                const calendarApi = calendar.getApi();\n                calendarApi.changeView(\"timeGridWeek\");\n              }\n            }\n\n          }\n        },\n        headerToolbar: {\n          left: \"prev next\",\n          center: \"title\",\n          right: \"today dayGridDay dayGridWeek dayGridMonth\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalendarPage, \"ac3B9CeLud+LLcMRYFd3PQI58uk=\");\n\n_c = CalendarPage;\nexport default CalendarPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"sources":["/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Calendar/Calendar.js"],"names":["React","useState","createRef","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","Axios","CalendarPage","times","timeSlots","setTimeSlots","eventTimes","get","then","data","title","TimeSlotID","start","Date","Start","end","End","console","log","testTimes","calendarRef","myTimeDayBtn","text","click","calendar","current","calendarApi","getApi","changeView","myTimeWeekBtn","left","center","right"],"mappings":"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","sourcesContent":["import React, {useState, createRef, useEffect} from 'react';\nimport FullCalendar from '@fullcalendar/react' // must go before plugins \nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport \"./Calendar.css\"\nimport  Axios  from 'axios';\n\nconst CalendarPage = ({ times }) => {\n\n  // const [eventTimes] = useState([\n  //   { title: '2 Hour Guided Hike', start: '2022-01-16T8:00:00', end: '2022-01-16T10:00:00' },\n  //   { title: 'Ice Skating', start: '2022-01-03T13:00:00', end: '2022-01-03T16:00:00' },\n  //   { title: 'Adult Ski Lessons', start: '2022-01-07T8:00:00', end: '2022-01-07T16:00:00' },\n  //   { title: 'Kids Ski Lessons', start: '2022-01-12T10:00:00', end: '2022-01-12T14:00:00' }\n  // ])\n\n      const [timeSlots, setTimeSlots] = useState([]);\n      var [eventTimes] = useState();\n\n      useEffect(() => {\n        // Axios.get(\"http://localhost:3001/calendarTimes\").then((response) => {\n        //   setTimeSlots(response.data);\n        // });\n        // console.log(timeSlots)\n\n        Axios.get(\"http://localhost:3001/calendarTimes\").then(data => {\n          eventTimes = {\n          title: data.TimeSlotID, start: data.Date+'T'+data.Start+':00:00', end: data.Date+'T'+data.End+':00:00' }\n        });\n\n        console.log(eventTimes);\n\n      }, [])\n\n      const testTimes = () => {\n        console.log(eventTimes)\n      }\n\n\n        const calendarRef = createRef();\n      return (\n        \n        <div className=\"calendar\">\n          <h2> Activity Calendar </h2>\n          <button onMouseMove={()=>testTimes()}>test</button> \n         <div className=\"content\">\n         <FullCalendar\n            ref={calendarRef}\n            height={750}\n            contentHeight={750}\n            plugins={[ dayGridPlugin, timeGridPlugin ]}\n            initialView=\"dayGridMonth\"\n            events={times}\n            customButtons = {{\n              myTimeDayBtn: {\n                text: \"timeDay\",\n                click() {\n                  const calendar = calendarRef.current;\n                  if(calendar) {\n                    const calendarApi = calendar.getApi();\n    \n                    calendarApi.changeView(\"timeGridDay\");\n                  }\n                },\n              },\n              myTimeWeekBtn: {\n                text: \"timeWeek\",\n                click() { \n                  const calendar = calendarRef.current;\n                  if(calendar) {\n                    const calendarApi = calendar.getApi();\n    \n                    calendarApi.changeView(\"timeGridWeek\");\n                  }\n                },\n              },\n            }}\n            headerToolbar={{\n              left: \"prev next\",\n              center: \"title\",\n              right: \"today dayGridDay dayGridWeek dayGridMonth\",\n            }}\n          />\n          \n         </div>\n        </div>\n      );\n    }\n   \n  export default CalendarPage"]},"metadata":{},"sourceType":"module"}