{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haniy\\\\Desktop\\\\Model_Pull\\\\CPSC471_FinalProject\\\\client\\\\src\\\\components\\\\LoginPage.js\";\nimport React from \"react\";\nimport { observer } from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './stores/LoginForm';\nimport SubmitButton from './stores/SubmitButton'; //import {login, username, password, setUsername, setPassword} from '../App.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    if (UserStore.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: \"Loading, please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this);\n    } else {\n      if (UserStore.isLoggedIn) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Welcome \", UserStore.username, /*#__PURE__*/_jsxDEV(SubmitButton, {\n              text: 'Log out',\n              disabled: false,\n              onClick: () => this.doLogout()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this);\n      }\n    }\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/Haniy/Desktop/Model_Pull/CPSC471_FinalProject/client/src/components/LoginPage.js"],"names":["React","observer","UserStore","LoginForm","SubmitButton","LoginPage","Component","componentDidMount","res","fetch","method","headers","result","json","success","loading","isLoggedIn","username","e","doLogout","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CACA;;;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAuC;AACZ,QAAjBC,iBAAiB,GAAG;AAEtB,QAAG;AACD,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AACnCC,QAAAA,MAAM,EAAE,MAD2B;AAEnCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAF0B,OAAhB,CAArB;AAOA,UAAIC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;;AAEA,UAAID,MAAM,IAAIA,MAAM,CAACE,OAArB,EAA8B;AAC5BZ,QAAAA,SAAS,CAACa,OAAV,GAAoB,KAApB;AACAb,QAAAA,SAAS,CAACc,UAAV,GAAuB,IAAvB;AACAd,QAAAA,SAAS,CAACe,QAAV,GAAqBL,MAAM,CAACK,QAA5B;AACD,OAJD,MAMK;AACHf,QAAAA,SAAS,CAACa,OAAV,GAAoB,KAApB;AACAb,QAAAA,SAAS,CAACc,UAAV,GAAuB,KAAvB;AACD;AACF,KApBD,CAsBA,OAAME,CAAN,EAAS;AACPhB,MAAAA,SAAS,CAACa,OAAV,GAAoB,KAApB;AACAb,MAAAA,SAAS,CAACc,UAAV,GAAuB,KAAvB;AAED;AACF;;AAEa,QAARG,QAAQ,GAAG;AAEf,QAAG;AACD,UAAIX,GAAG,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAY;AAC/BC,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAFsB,OAAZ,CAArB;AAOA,UAAIC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;;AAEA,UAAID,MAAM,IAAIA,MAAM,CAACE,OAArB,EAA8B;AAC5BZ,QAAAA,SAAS,CAACc,UAAV,GAAuB,KAAvB;AACAd,QAAAA,SAAS,CAACe,QAAV,GAAqB,EAArB;AACD;AAEF,KAfD,CAiBA,OAAMC,CAAN,EAAS;AACPE,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAED;AACF;;AAEDI,EAAAA,MAAM,GAAG;AAEP,QAAIpB,SAAS,CAACa,OAAd,EAAuB;AACrB,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARD,MAUK;AAEH,UAAIb,SAAS,CAACc,UAAd,EAA0B;AACxB,4BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAG,WAAjB;AAAA,mCACWd,SAAS,CAACe,QADrB,eAEE,QAAC,YAAD;AACE,cAAA,IAAI,EAAK,SADX;AAEE,cAAA,QAAQ,EAAI,KAFd;AAGE,cAAA,OAAO,EAAK,MAAM,KAAKE,QAAL;AAHpB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD;AACF;AACJ;;AAtFkC;;AA0FvC,eAAehB,SAAf","sourcesContent":["import React from \"react\";\r\nimport { observer } from 'mobx-react'\r\nimport UserStore from './stores/UserStore';\r\nimport LoginForm from './stores/LoginForm';\r\nimport SubmitButton from './stores/SubmitButton';\r\n//import {login, username, password, setUsername, setPassword} from '../App.js';\r\n\r\nclass LoginPage extends React.Component{\r\n    async componentDidMount() {\r\n\r\n        try{\r\n          let res = await fetch('/isLoggedIn', {\r\n            method: 'post',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          let result = await res.json();\r\n    \r\n          if (result && result.success) {\r\n            UserStore.loading = false;\r\n            UserStore.isLoggedIn = true;\r\n            UserStore.username = result.username;\r\n          }\r\n    \r\n          else {\r\n            UserStore.loading = false;\r\n            UserStore.isLoggedIn = false;\r\n          }\r\n        }\r\n    \r\n        catch(e) {\r\n          UserStore.loading = false;\r\n          UserStore.isLoggedIn = false;\r\n    \r\n        }\r\n      }\r\n    \r\n      async doLogout() {\r\n    \r\n        try{\r\n          let res = await fetch('/logout', {\r\n            method: 'post',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          let result = await res.json();\r\n      \r\n          if (result && result.success) {\r\n            UserStore.isLoggedIn = false;\r\n            UserStore.username = '';\r\n          }\r\n      \r\n        }\r\n      \r\n        catch(e) {\r\n          console.log(e);\r\n      \r\n        }\r\n      }\r\n    \r\n      render() {\r\n    \r\n        if (UserStore.loading) {\r\n          return (\r\n            <div className=\"app\">\r\n              <div className = 'container'>\r\n                Loading, please wait...\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n    \r\n        else {\r\n    \r\n          if (UserStore.isLoggedIn) {\r\n            return (\r\n              <div className=\"app\">\r\n                <div className = 'container'>\r\n                  Welcome {UserStore.username}\r\n                  <SubmitButton\r\n                    text = { 'Log out'}\r\n                    disabled = {false}\r\n                    onClick = { () => this.doLogout() }\r\n                    />\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n    }\r\n        \r\n}\r\n      \r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}