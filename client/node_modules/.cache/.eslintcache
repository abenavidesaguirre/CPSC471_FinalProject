[{"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/index.js":"1","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/App.js":"2","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/reportWebVitals.js":"3","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/Header.js":"4","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/Excursions.js":"5","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/Excursion.js":"6","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/ExcursionInfo.js":"7","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/Cart.js":"8","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/BookingConf.js":"9","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/CartExcursions.js":"10","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/Button.js":"11","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/CalendarPage.js":"12","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/LandingPage.js":"13","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/LoginPage.js":"14","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/stores/LoginForm.js":"15","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/stores/SubmitButton.js":"16","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/stores/UserStore.js":"17","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/stores/InputField.js":"18","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/RegistrationPage.js":"19","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/index.js":"20","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/reportWebVitals.js":"21","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/App.js":"22","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/components/Button.js":"23","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/Cart.js":"24","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/Excursions.js":"25","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/components/NavigationBar/NavigationBar.js":"26","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Landing/Landing.js":"27","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/Hiking.js":"28","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/components/excursionDetails.js":"29","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/AdultSki.js":"30","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/Canoeing.js":"31","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/KidSki.js":"32","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/Skating.js":"33","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/Snowshoeing.js":"34","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/HikingCart.js":"35","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Registration/Registration.js":"36","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/AdultSkiCart.js":"37","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/CanoeingCart.js":"38","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/SkatingCart.js":"39","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/SnowshoeingCart.js":"40","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/KidSkiCart.js":"41","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/BookingConfirmation/BookingConf.js":"42","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Login/Login.js":"43","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/CustomerDash/CustomerDash.js":"44","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/AuthContext.js":"45","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Calendar/Calendar.js":"46","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/StaffDash/StaffDash.js":"47"},{"size":500,"mtime":1637649013128,"results":"48","hashOfConfig":"49"},{"size":17858,"mtime":1638904281491,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1637649013129,"results":"51","hashOfConfig":"49"},{"size":2735,"mtime":1638986494579,"results":"52","hashOfConfig":"49"},{"size":326,"mtime":1638770568937,"results":"53","hashOfConfig":"49"},{"size":1098,"mtime":1638804719351,"results":"54","hashOfConfig":"49"},{"size":1589,"mtime":1638982547505,"results":"55","hashOfConfig":"49"},{"size":1664,"mtime":1638986418531,"results":"56","hashOfConfig":"49"},{"size":664,"mtime":1638904298873,"results":"57","hashOfConfig":"49"},{"size":2631,"mtime":1638984936662,"results":"58","hashOfConfig":"49"},{"size":217,"mtime":1638904322967,"results":"59","hashOfConfig":"49"},{"size":1754,"mtime":1638906550534,"results":"60","hashOfConfig":"49"},{"size":801,"mtime":1638804067550,"results":"61","hashOfConfig":"49"},{"size":2325,"mtime":1638795836623,"results":"62","hashOfConfig":"49"},{"size":3591,"mtime":1638798409629,"results":"63","hashOfConfig":"49"},{"size":487,"mtime":1638731832354,"results":"64","hashOfConfig":"49"},{"size":257,"mtime":1638731832371,"results":"65","hashOfConfig":"49"},{"size":728,"mtime":1638798141871,"results":"66","hashOfConfig":"49"},{"size":3285,"mtime":1638982468442,"results":"67","hashOfConfig":"49"},{"size":500,"mtime":1639330005402,"results":"68","hashOfConfig":"69"},{"size":362,"mtime":1639330005402,"results":"70","hashOfConfig":"69"},{"size":2965,"mtime":1639838154817,"results":"71","hashOfConfig":"69"},{"size":217,"mtime":1639704537712,"results":"72","hashOfConfig":"69"},{"size":7271,"mtime":1639696949755,"results":"73","hashOfConfig":"69"},{"size":2119,"mtime":1639703743737,"results":"74","hashOfConfig":"69"},{"size":5072,"mtime":1639826797250,"results":"75","hashOfConfig":"69"},{"size":914,"mtime":1639764878714,"results":"76","hashOfConfig":"69"},{"size":2434,"mtime":1639762895572,"results":"77","hashOfConfig":"69"},{"size":4647,"mtime":1639704510713,"results":"78","hashOfConfig":"69"},{"size":2532,"mtime":1639762879892,"results":"79","hashOfConfig":"69"},{"size":2523,"mtime":1639762888788,"results":"80","hashOfConfig":"69"},{"size":2525,"mtime":1639762901894,"results":"81","hashOfConfig":"69"},{"size":2523,"mtime":1639762908088,"results":"82","hashOfConfig":"69"},{"size":2535,"mtime":1639762912690,"results":"83","hashOfConfig":"69"},{"size":11468,"mtime":1639814143468,"results":"84","hashOfConfig":"69"},{"size":8586,"mtime":1639785958506,"results":"85","hashOfConfig":"69"},{"size":10652,"mtime":1639814193740,"results":"86","hashOfConfig":"69"},{"size":11463,"mtime":1639814183939,"results":"87","hashOfConfig":"69"},{"size":11460,"mtime":1639814215722,"results":"88","hashOfConfig":"69"},{"size":11496,"mtime":1639814223210,"results":"89","hashOfConfig":"69"},{"size":10644,"mtime":1639814209783,"results":"90","hashOfConfig":"69"},{"size":568,"mtime":1639725002879,"results":"91","hashOfConfig":"69"},{"size":2340,"mtime":1639825188581,"results":"92","hashOfConfig":"69"},{"size":3326,"mtime":1639827025274,"results":"93","hashOfConfig":"69"},{"size":85,"mtime":1639793648281,"results":"94","hashOfConfig":"69"},{"size":4911,"mtime":1639840558769,"results":"95","hashOfConfig":"69"},{"size":2885,"mtime":1639827107937,"results":"96","hashOfConfig":"69"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"1kiltb",{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"99"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"99"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"135","usedDeprecatedRules":"99"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"pi12xh",{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"149"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"142"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"142"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"142"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"142"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"142"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"142"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"142"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"142"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"142"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"142"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"142"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"142"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"142"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"142"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"142"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"142"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"142"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"142"},"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/index.js",[],["217","218"],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/App.js",["219"],"import Header from './components/Header';\nimport Excursions from './components/Excursions';\nimport ExcursionInfo from './components/ExcursionInfo';\nimport Cart from './components/Cart';\nimport BookingConf from './components/BookingConf';\nimport { useState } from 'react';\nimport CalendarPage from './components/CalendarPage';\nimport LandingPage from './components/LandingPage';\nimport LoginPage from './components/LoginPage';\nimport RegistrationPage from './components/RegistrationPage';\nimport { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst App = () => {\n\n  const [eventTimes] = useState([\n    { title: '2 Hour Guided Hike', start: '2022-01-16T8:00:00', end: '2022-01-16T10:00:00' },\n    { title: 'Ice Skating', start: '2022-01-03T13:00:00', end: '2022-01-03T16:00:00' },\n    { title: 'Adult Ski Lessons', start: '2022-01-07T8:00:00', end: '2022-01-07T16:00:00' },\n    { title: 'Kids Ski Lessons', start: '2022-01-12T10:00:00', end: '2022-01-12T14:00:00' }\n  ])\n\n\n  const [excursionList] = useState([\n    {\n      id: 1,\n      title: '2 Hour Guided Hike',\n      duration: '2 Hours',\n      cost: 35,\n      seasons: 'All',\n      maxPpl: 18,\n      ages: 'All',\n      tag: 'One of the best ways to experience Canadian beauty is by immersing yourself in its natural lands. Our hikes are designed to help you have the best and most memorable experience in the Canadian Rockies. Join us for a hike up Ha Ling Peak in Alberta complemented by a gourmet lunch to be enjoyed at the summit.',\n      dp1: 'Come join us for a breathtaking adventure in the heart of the Canadian mountains! We will depart from the town of Canmore at the designated meeting time and head to the trailhead of Ha Ling Peak.',\n      dp2: 'From there we will begin ascending into the mountains. Be preparted to encounter astonishing views and be enveloped by the gorgeous surrounding nature. During the hike we will pause for water breaks and snacks.',\n      dp3: 'Once at the summit, enjoy the beautiful Alberta scenery and a delicious chef-packed lunch. This adventure is perfect for everyone, from beginners to seasoned hikers, solo travelers and families alike!',\n      imgUrl: 'https://i.imgur.com/LmF0aVw.jpg',\n      path: '/hiking'\n    },\n    {\n      id: 2,\n      title: 'Ice Skating',\n      duration: '3 Hours',\n      cost: 50,\n      seasons: 'All',\n      maxPpl: 18,\n      ages: 'All',\n      tag: 'A favourite Canadian sport that is fun for all ages and abilities, ice skating in Banff and Lake Louise is a great way to enjoy the fresh mountain air with family and friends. Immerse yourself in the natural beauty of your surroundings or maybe join in a game of pick-up, or “shinny” hockey. Then take a break and warm up with hot cocoa beside a bonfire before heading back out on the ice for more. ',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque dui turpis, sagittis eu finibus id, volutpat in ante. Nam eu ultrices felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce sed elit porttitor, consectetur est sed, congue nisl. Ut eu semper urna. In hac habitasse platea dictumst. Sed consequat enim massa. Vestibulum consectetur consectetur ante, id sagittis erat vestibulum consequat. Nunc pulvinar pulvinar erat, posuere auctor urna hendrerit ut. Ut sollicitudin nisl est, quis rutrum libero bibendum non. Nulla volutpat aliquet turpis eu luctus. Sed blandit justo vitae mi pharetra, id cursus justo imperdiet. Nam in pharetra augue. Vestibulum luctus elit nunc. Vivamus in arcu egestas, lacinia magna eget, sodales mauris.Donec scelerisque maximus convallis. Donec velit augue, tincidunt at fermentum tristique, bibendum sodales justo. Sed efficitur diam vitae tortor gravida semper. Nulla vel congue neque, nec venenatis urna. Quisque placerat laoreet nibh tempus dictum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed consequat, arcu congue pharetra fringilla, ipsum dolor euismod ex, vitae bibendum tellus mauris et tellus. Duis venenatis rutrum nibh, vitae semper nisl. Phasellus posuere metus at blandit sodales. Vestibulum at tempor sapien, at volutpat turpis. Nulla est dolor, ornare vestibulum vestibulum quis, congue ac dui. Sed interdum consequat velit.',\n      dp1: 'Come join us for a breathtaking adventure in the heart of the Canadian mountains! We will depart from the town of Canmore at the designated meeting time and head to the trailhead of Ha Ling Peak.',\n      dp2: 'From there we will begin ascending into the mountains. Be preparted to encounter astonishing views and be enveloped by the gorgeous surrounding nature. During the hike we will pause for water breaks and snacks.',\n      dp3: 'Once at the summit, enjoy the beautiful Alberta scenery and a delicious chef-packed lunch. This adventure is perfect for everyone, from beginners to seasoned hikers, solo travelers and families alike!',\n      imgUrl: 'https://i.imgur.com/s7wSPDg.jpg',\n      path: '/skating'\n    },\n    {\n      id: 3,\n      title: 'Canoeing',\n      duration: '2 Hours',\n      cost: 35,\n      seasons: 'May - August',\n      maxPpl: 18,\n      ages: 'All',\n      tag: 'Canada is famous for its countless rivers and lakes, making it the perfect destination for canoeing adventures! Sit back in your boat for a relaxing vacation exploring Canada’s vast wilderness while paddling on tranquil lakes. Adventure seekers will also not be disappointed, as exciting whitewater journeys on the wildest North American rivers await!      ',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque dui turpis, sagittis eu finibus id, volutpat in ante. Nam eu ultrices felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce sed elit porttitor, consectetur est sed, congue nisl. Ut eu semper urna. In hac habitasse platea dictumst. Sed consequat enim massa. Vestibulum consectetur consectetur ante, id sagittis erat vestibulum consequat. Nunc pulvinar pulvinar erat, posuere auctor urna hendrerit ut. Ut sollicitudin nisl est, quis rutrum libero bibendum non. Nulla volutpat aliquet turpis eu luctus. Sed blandit justo vitae mi pharetra, id cursus justo imperdiet. Nam in pharetra augue. Vestibulum luctus elit nunc. Vivamus in arcu egestas, lacinia magna eget, sodales mauris.Donec scelerisque maximus convallis. Donec velit augue, tincidunt at fermentum tristique, bibendum sodales justo. Sed efficitur diam vitae tortor gravida semper. Nulla vel congue neque, nec venenatis urna. Quisque placerat laoreet nibh tempus dictum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed consequat, arcu congue pharetra fringilla, ipsum dolor euismod ex, vitae bibendum tellus mauris et tellus. Duis venenatis rutrum nibh, vitae semper nisl. Phasellus posuere metus at blandit sodales. Vestibulum at tempor sapien, at volutpat turpis. Nulla est dolor, ornare vestibulum vestibulum quis, congue ac dui. Sed interdum consequat velit.',\n      dp1: 'Come join us for a breathtaking adventure in the heart of the Canadian mountains! We will depart from the town of Canmore at the designated meeting time and head to the trailhead of Ha Ling Peak.',\n      dp2: 'From there we will begin ascending into the mountains. Be preparted to encounter astonishing views and be enveloped by the gorgeous surrounding nature. During the hike we will pause for water breaks and snacks.',\n      dp3: 'Once at the summit, enjoy the beautiful Alberta scenery and a delicious chef-packed lunch. This adventure is perfect for everyone, from beginners to seasoned hikers, solo travelers and families alike!',\n      imgUrl: 'https://i.imgur.com/TIu5EON.jpg',\n      path: '/canoeing'\n    },\n    {\n      id: 4,\n      title: 'Adult Ski Lessons',\n      duration: '8 Hours',\n      cost: 125,\n      seasons: 'November - April',\n      maxPpl: 18,\n      ages: 'All',\n      tag: 'Designed for a more mature group looking to discover the basics of skiing, this program covers the fundamentals but with slightly more technical insight into skiing progression and a slightly quicker pace than our youth program. This single 90-minute lesson includes hill access and rentals for the program time.',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque dui turpis, sagittis eu finibus id, volutpat in ante. Nam eu ultrices felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce sed elit porttitor, consectetur est sed, congue nisl. Ut eu semper urna. In hac habitasse platea dictumst. Sed consequat enim massa. Vestibulum consectetur consectetur ante, id sagittis erat vestibulum consequat. Nunc pulvinar pulvinar erat, posuere auctor urna hendrerit ut. Ut sollicitudin nisl est, quis rutrum libero bibendum non. Nulla volutpat aliquet turpis eu luctus. Sed blandit justo vitae mi pharetra, id cursus justo imperdiet. Nam in pharetra augue. Vestibulum luctus elit nunc. Vivamus in arcu egestas, lacinia magna eget, sodales mauris.Donec scelerisque maximus convallis. Donec velit augue, tincidunt at fermentum tristique, bibendum sodales justo. Sed efficitur diam vitae tortor gravida semper. Nulla vel congue neque, nec venenatis urna. Quisque placerat laoreet nibh tempus dictum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed consequat, arcu congue pharetra fringilla, ipsum dolor euismod ex, vitae bibendum tellus mauris et tellus. Duis venenatis rutrum nibh, vitae semper nisl. Phasellus posuere metus at blandit sodales. Vestibulum at tempor sapien, at volutpat turpis. Nulla est dolor, ornare vestibulum vestibulum quis, congue ac dui. Sed interdum consequat velit.',\n      dp1: 'Come join us for a breathtaking adventure in the heart of the Canadian mountains! We will depart from the town of Canmore at the designated meeting time and head to the trailhead of Ha Ling Peak.',\n      dp2: 'From there we will begin ascending into the mountains. Be preparted to encounter astonishing views and be enveloped by the gorgeous surrounding nature. During the hike we will pause for water breaks and snacks.',\n      dp3: 'Once at the summit, enjoy the beautiful Alberta scenery and a delicious chef-packed lunch. This adventure is perfect for everyone, from beginners to seasoned hikers, solo travelers and families alike!',\n      imgUrl: 'https://i.imgur.com/AP7pSHG.jpg',\n      path: '/adultSki'\n    },\n    {\n      id: 5,\n      title: 'Kids Ski Lessons',\n      duration: '4 Hours',\n      cost: 75,\n      seasons: 'November - April',\n      tag: 'Watch your child\\s passion for skiing take off in our Radical Riders ski programs. These lessons are for active kids to have a blast on snow, gain confidence, improve their riding skills, and build friendships in a safe learning environment.',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque dui turpis, sagittis eu finibus id, volutpat in ante. Nam eu ultrices felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce sed elit porttitor, consectetur est sed, congue nisl. Ut eu semper urna. In hac habitasse platea dictumst. Sed consequat enim massa. Vestibulum consectetur consectetur ante, id sagittis erat vestibulum consequat. Nunc pulvinar pulvinar erat, posuere auctor urna hendrerit ut. Ut sollicitudin nisl est, quis rutrum libero bibendum non. Nulla volutpat aliquet turpis eu luctus. Sed blandit justo vitae mi pharetra, id cursus justo imperdiet. Nam in pharetra augue. Vestibulum luctus elit nunc. Vivamus in arcu egestas, lacinia magna eget, sodales mauris.Donec scelerisque maximus convallis. Donec velit augue, tincidunt at fermentum tristique, bibendum sodales justo. Sed efficitur diam vitae tortor gravida semper. Nulla vel congue neque, nec venenatis urna. Quisque placerat laoreet nibh tempus dictum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed consequat, arcu congue pharetra fringilla, ipsum dolor euismod ex, vitae bibendum tellus mauris et tellus. Duis venenatis rutrum nibh, vitae semper nisl. Phasellus posuere metus at blandit sodales. Vestibulum at tempor sapien, at volutpat turpis. Nulla est dolor, ornare vestibulum vestibulum quis, congue ac dui. Sed interdum consequat velit.',\n      dp1: 'Come join us for a breathtaking adventure in the heart of the Canadian mountains! We will depart from the town of Canmore at the designated meeting time and head to the trailhead of Ha Ling Peak.',\n      dp2: 'From there we will begin ascending into the mountains. Be preparted to encounter astonishing views and be enveloped by the gorgeous surrounding nature. During the hike we will pause for water breaks and snacks.',\n      dp3: 'Once at the summit, enjoy the beautiful Alberta scenery and a delicious chef-packed lunch. This adventure is perfect for everyone, from beginners to seasoned hikers, solo travelers and families alike!',\n      imgUrl: 'https://i.imgur.com/WL3q1uH.jpg',\n      path: '/kidSki'\n    },\n    {\n      id: 6,\n      title: 'Snowshoeing',\n      duration: '4 Hours',\n      cost: 75,\n      seasons: 'November - March',\n      tag: 'Snowshoeing is the perfect winter activity that’s fun and accessible for everyone! Join in on this one-of-a-kind way to explore the wonderland that is the Canadian Rockies with the help of our experienced guides. Learn about the history of the region, keep an eye out for wildlife, and prepare for a day full of laughter as you conquer the snow, one step at a time!',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque dui turpis, sagittis eu finibus id, volutpat in ante. Nam eu ultrices felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce sed elit porttitor, consectetur est sed, congue nisl. Ut eu semper urna. In hac habitasse platea dictumst. Sed consequat enim massa. Vestibulum consectetur consectetur ante, id sagittis erat vestibulum consequat. Nunc pulvinar pulvinar erat, posuere auctor urna hendrerit ut. Ut sollicitudin nisl est, quis rutrum libero bibendum non. Nulla volutpat aliquet turpis eu luctus. Sed blandit justo vitae mi pharetra, id cursus justo imperdiet. Nam in pharetra augue. Vestibulum luctus elit nunc. Vivamus in arcu egestas, lacinia magna eget, sodales mauris.Donec scelerisque maximus convallis. Donec velit augue, tincidunt at fermentum tristique, bibendum sodales justo. Sed efficitur diam vitae tortor gravida semper. Nulla vel congue neque, nec venenatis urna. Quisque placerat laoreet nibh tempus dictum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed consequat, arcu congue pharetra fringilla, ipsum dolor euismod ex, vitae bibendum tellus mauris et tellus. Duis venenatis rutrum nibh, vitae semper nisl. Phasellus posuere metus at blandit sodales. Vestibulum at tempor sapien, at volutpat turpis. Nulla est dolor, ornare vestibulum vestibulum quis, congue ac dui. Sed interdum consequat velit.',\n      dp1: 'Come join us for a breathtaking adventure in the heart of the Canadian mountains! We will depart from the town of Canmore at the designated meeting time and head to the trailhead of Ha Ling Peak.',\n      dp2: 'From there we will begin ascending into the mountains. Be preparted to encounter astonishing views and be enveloped by the gorgeous surrounding nature. During the hike we will pause for water breaks and snacks.',\n      dp3: 'Once at the summit, enjoy the beautiful Alberta scenery and a delicious chef-packed lunch. This adventure is perfect for everyone, from beginners to seasoned hikers, solo travelers and families alike!',\n      imgUrl: 'https://i.imgur.com/2Jtfqy3.jpg',\n      path: '/snowshoeing'\n    }\n  ])\n\n  const [bookingList] = useState([\n    {\n      id: 1,\n      bookingid: 'XYZ123ABC456',\n      bookingFName: 'John',\n      bookingLName: 'Smith',\n      bookingExcurions: 0,\n      numParticipants: 3,\n      cost: (35.00 * 3.00),\n      date: 'May 22, 2023 @ 1:00 PM'\n    }\n  ])\n\n  return (\n    <Router>\n      <div className='container-fluid'>\n        <Header />\n\n        <Routes>\n          <Route path=\"/\" exact element={<LandingPage />} />\n          <Route path=\"/excursions\" exact element={<Excursions excursionList={excursionList} />} />\n          <Route path=\"/bookNow\" exact element={<CalendarPage times={eventTimes} />} />\n          <Route path=\"/login\" exact element={<LoginPage />} />\n          <Route path=\"/register\" exact element={<RegistrationPage />} />\n          <Route path=\"/cart\" exact element={<Cart booking={bookingList} excursionList={excursionList} bookingIndex={0}\n            excursionIndex={0}></Cart>} />\n          <Route path=\"/bookingConf\" exact element={<BookingConf booking={bookingList} excursionList={excursionList}\n            bookingIndex={0} excursionIndex={0}></BookingConf>} />\n          <Route path=\"/hiking\" exact element={<ExcursionInfo excursion={excursionList[0]}>\n          </ExcursionInfo>} />\n          <Route path=\"/skating\" exact element={<ExcursionInfo excursion={excursionList[1]}>\n          </ExcursionInfo>} />\n          <Route path=\"/canoeing\" exact element={<ExcursionInfo excursion={excursionList[2]}>\n          </ExcursionInfo>} />\n          <Route path=\"/adultSki\" exact element={<ExcursionInfo excursion={excursionList[3]}>\n          </ExcursionInfo>} />\n          <Route path=\"/kidSki\" exact element={<ExcursionInfo excursion={excursionList[4]}>\n          </ExcursionInfo>} />\n          <Route path=\"/snowshoeing\" exact element={<ExcursionInfo excursion={excursionList[5]}>\n          </ExcursionInfo>} />\n        </Routes>\n\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/reportWebVitals.js",[],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/Header.js",["220","221","222","223"],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/Excursions.js",[],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/Excursion.js",["224"],"import Button from \"./Button.js\";\nimport {Link} from \"react-router-dom\"\nimport \"./styling/ExcursionCSS.css\"\n\nconst Excursion = ({ excursion }) => {\n    \n    return (\n      \n        <div className='excursionBlock'>\n            <div className='excursionImg'>\n                <img src={excursion.imgUrl}/>\n            </div>\n   \n            <div className='excursion'>\n                <div className='excursionTitle'>\n                    <h2>{excursion.title}</h2>\n                </div>\n                <div className='excursionDetails'>\n                    <h4>Cost: ${excursion.cost}</h4>\n                    <h4>Duration: {excursion.duration}</h4>\n                </div>\n                <div className='excursionDescription'>\n                    <p>{excursion.tag}</p>\n                </div>\n                <div className = \"learnMore\">\n                    <Link to={excursion.path}>\n                        <Button text=\"Learn More\" buttonStyle=\"learnMoreButton\"/>\n                    </Link>\n                </div>\n\n            </div>\n        </div>\n      \n    );\n  }\n  export default Excursion","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/ExcursionInfo.js",[],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/Cart.js",[],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/BookingConf.js",[],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/CartExcursions.js",["225"],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/Button.js",[],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/CalendarPage.js",[],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/LandingPage.js",[],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/LoginPage.js",["226","227"],"import React from \"react\";\nimport { observer } from 'mobx-react'\nimport UserStore from './stores/UserStore';\nimport LoginForm from './stores/LoginForm';\nimport SubmitButton from './stores/SubmitButton';\n\nclass LoginPage extends React.Component{\n    async componentDidMount() {\n\n        try{\n          let res = await fetch('/isLoggedIn', {\n            method: 'post',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          });\n          let result = await res.json();\n    \n          if (result && result.success) {\n            UserStore.loading = false;\n            UserStore.isLoggedIn = true;\n            UserStore.username = result.username;\n          }\n    \n          else {\n            UserStore.loading = false;\n            UserStore.isLoggedIn = false;\n          }\n        }\n    \n        catch(e) {\n          UserStore.loading = false;\n          UserStore.isLoggedIn = false;\n    \n        }\n      }\n    \n      async doLogout() {\n    \n        try{\n          let res = await fetch('/logout', {\n            method: 'post',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          });\n          let result = await res.json();\n      \n          if (result && result.success) {\n            UserStore.isLoggedIn = false;\n            UserStore.username = '';\n          }\n      \n        }\n      \n        catch(e) {\n          console.log(e);\n      \n        }\n      }\n    \n      render() {\n    \n        if (UserStore.loading) {\n          return (\n            <div className=\"app\">\n              <div className = 'container'>\n                Loading, please wait...\n              </div>\n            </div>\n          );\n        }\n    \n        else {\n    \n          if (UserStore.isLoggedIn) {\n            return (\n              <div className=\"app\">\n                <div className = 'container'>\n                  Welcome {UserStore.username}\n                  <SubmitButton\n                    text = { 'Log out'}\n                    disabled = {false}\n                    onClick = { () => this.doLogout() }\n                    />\n                </div>\n              </div>\n            );\n          }\n        }\n    }\n        \n}\n      \nexport default LoginForm;\n","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/stores/LoginForm.js",[],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/stores/SubmitButton.js",[],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/stores/UserStore.js",["228"],"import { extendObservable } from \"mobx\";\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore;","/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/stores/InputField.js",[],"/Users/Andrea/abenav/cpsc471FinalProject/cpsc471pages/src/components/RegistrationPage.js",[],"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/index.js",[],["229","230"],"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/reportWebVitals.js",[],"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/App.js",[],"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/components/Button.js",[],["231","232"],"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/Cart.js",["233","234"],"import Form from 'react-bootstrap/Form'\n// import \"./styling/CartExcursionsCSS.css\"\n// import Button from \"../../components/Button.js\";\nimport {Link} from \"react-router-dom\"\nimport \"./Cart.css\"\nimport {useState} from 'react'\nimport Axios from \"axios\"\n\n\nconst Cart = ({excursionList, excursionDescriptions, excursionIndex, slots}) => {\n\n    // const [TimeSlot, setTimeSlot] = useState(slots[0].TimeSlot)\n    // const [Participants, setNumParticipants] = useState(0);\n    // const [AgreementSignature, setAgreementSignature] = useState(\"\")\n    const [total, setTotal] = useState(excursionList[excursionIndex].Cost);\n\n    const BookingID = \"TestID13\"\n    const NumAdults = 3;                //change in DB?\n    const NumMinors = 0;\n    const Cost = total;\n    const TimeSlot = \"HIKE1\"\n    const ExcursionName = \"2 Hour Guided Hike\";\n    const Participants = 3;\n    const Receipt = \"I will pay onsite\"\n    const AgreementSignature = \"John Smith\"\n    const CustomerID = 2;                       //get after login\n\n\n\n    const [bookingList, setBookingList] = useState([]);\n    const [booksList, setBooksList] = useState([]);\n    const [makesList, setMakesList] = useState([]);\n\n   \n    // console.log(excursionList[excursionIndex].Cost)\n\n    // const updateSubtotal =()=> {\n\n    //     total = document.getElementById(\"numPart\").value * excursionList[excursionIndex].Cost;\n    //     console.log(document.getElementById(\"numPart\").value)\n    //     console.log(excursionList[excursionIndex].Cost)\n    //     console.log(\"Logging Total: \" + total);\n    // };\n\n    const updateSubtotal = (e) => {\n        setTotal(e.target.value * excursionList[excursionIndex].Cost)\n    }\n\n    const updatePart = (e) => {\n        // setNumParticipants(e.target.value)\n    }\n\n    const submitBooking =()=> {\n        console.log(\"Time Slot:\" + TimeSlot);\n        console.log(\"BookingID:\" + BookingID);\n        console.log(\"Cost:\" + Cost);\n        console.log(\"Participants:\" + Participants);\n        console.log(\"Agreement Signature:\" + AgreementSignature);\n\n        if(Participants !== 0){\n        Axios.post(\"http://localhost:3001/createBooking\", {\n            \n            BookingID: BookingID,\n            NumAdults : NumAdults,\n            NumMinors : NumMinors,\n            Cost : Cost,\n            TimeSlot : TimeSlot,\n\n        }).then(() => {\n            setBookingList([\n                ...bookingList,\n                {\n                    BookingID: BookingID,\n                    NumAdults : NumAdults,\n                    NumMinors : NumMinors,\n                    Cost : Cost,\n                    TimeSlot : TimeSlot,\n                },\n            ]);\n        });\n\n        Axios.post(\"http://localhost:3001/Books\", {\n            BookingID: BookingID,\n            ExcursionName: ExcursionName,\n            Participants: Participants,\n        }).then(() => {\n            setBooksList([\n                ...booksList,\n                {\n                    BookingID: BookingID,\n                    ExcursionName: ExcursionName,\n                    Participants: Participants,\n                },\n            ]);\n        });\n\n        Axios.post(\"http://localhost:3001/MakesBooking\", {\n            CustomerID: CustomerID,\n            BookingID: BookingID,\n            Receipt: Receipt,\n            AgreementSignature: AgreementSignature\n        }).then(() => {\n            setMakesList([\n                ...makesList,\n                {\n                    CustomerID: CustomerID,\n                    BookingID: BookingID,\n                    Receipt: Receipt,\n                    AgreementSignature: AgreementSignature\n                },\n            ]);\n        });\n    }\n    };\n\n    return (  \n        <div className='cartBlock'>\n            <div className='cartHeader'>\n                <h2>Cart</h2>\n            </div>\n            <div className='cartExcursionDetails'>\n                    <div className='cartExcursionImg'>\n                        <img src={excursionDescriptions.imgURL}/>\n                    </div>\n                    <div className='cartExcursionDetailsText'>\n                    <div className='cartExcursionDetailsTitle'>\n                        <h3>{excursionList[excursionIndex].Name}</h3>\n                    </div>\n                    <div className='cartExcursionDetailsDate'>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Booking Date: </Form.Label>\n                            <Form.Select type=\"email\" placeholder=\"Email Address\"  required>\n                                 {slots.map((slots => <option value={slots.TimeSlot}>{slots.Date.substr(0,10)} @ {slots.Start}:00 MST</option>\n                                ) \n                                )}\n                            </Form.Select>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Number of Participants: </Form.Label>\n                            <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(event) => {updateSubtotal(event); updatePart(event)} }  required>\n                                <option value=\"1\" >1</option>\n                                <option value=\"2\" >2</option>\n                                <option value=\"3\" >3</option>\n                                <option value=\"4\" >4</option>\n                                <option value=\"5\" >5</option>\n                                <option value=\"6\" >6</option>\n                                <option value=\"7\" >7</option>\n                                <option value=\"8\" >8</option>\n                                <option value=\"9\" >9</option>\n                                <option value=\"10\" >10</option>\n                            </Form.Select>\n                        </Form.Group>\n                    </Form>\n\n                        <h4>Cost Per Person: ${excursionList[excursionIndex].Cost}.00</h4>\n                    </div>\n                    </div>\n                </div>\n                 \n            <div className='cartFooter'>\n            <form>\n                <label>\n                    I understand the risk associated with the above activities. <br/><br/>I understand the terms and conditions of service: <br/><br/>\n\n                    <input size=\"40\" type=\"text\" name=\"name\" placeholder=\"Signature\" required />\n                </label>\n                    {/* <Button text=\"Complete Order\" buttonType=\"completeButton\" buttonStyle=\"completeStyle\"  onClick={() => submitBooking()}></Button> */}\n                    <Link to=\"/bookingConf\">\n                    {/* <Button text=\"Finalize\" buttonType=\"completeButton\" buttonStyle=\"completeStyle\" ></Button> */}\n                    </Link>\n            </form>\n            <div>\n                <h4>Subtotal: ${total}.00</h4>\n       \n            </div>\n            </div>\n        </div>\n    );\n  }\n  \n  export default Cart\n\n//   (event)=>{setNumParticipants(event.target.value)}\n\n// onChange={(event) => {setTotal(event.target.value * excursionList[excursionIndex].Cost)}}\n\n// onChange={(event) => {setTimeSlot(event.target.value)}}\n\n// onChange={(event) => {setAgreementSignature(event.target.value)}}\n\n","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/Excursions.js",["235","236"],"\nimport {Link} from \"react-router-dom\";\nimport \"./Excursions.css\";\nimport { excursionDetails } from \"../../components/excursionDetails\";\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\n\n\n\nconst Excursions = ({}) => {\n    const [excursionList, setExcursionList] = useState([]);\n\n    useEffect(()=>{\n        Axios.get('http://localhost:3001/excursions').then((response) => {\n        setExcursionList(response.data);\n        });\n    }, []);\n            \n    return (\n     \n        <div >\n            <h2 className='excursionHeading'> Excursions </h2>\n            \n            {excursionList.map((val, key) => {\n                return (\n                    <div className='excursionBlock'>\n                        <div className='excursionImg'>\n                            <img src={excursionDetails[key].imgURL}/>\n                        </div>\n            \n                        <div className='excursion'>\n                            <div className='excursionTitle'>\n                                <h2>{val.Name}</h2>\n                            </div>\n                            <div className='excursionDetails'>\n                                <h4>Cost: ${val.Cost}</h4>\n                                <h4>Duration: {val.Duration} Hours</h4>\n                            </div>\n                            <div className='excursionDescription'>\n                                <p>{excursionDetails[key].snip}</p>\n                            </div>\n                            <div className = \"learnMore\">\n                                {console.log(excursionDetails[key].path)}\n                                <Link to={excursionDetails[key].path}>\n                                    <div className=\"learnMore\">\n                                        <button className=\"learnMoreButton\">Learn More</button>\n                                    </div>\n                                </Link>\n                            </div>\n\n                        </div>\n                    </div>\n                );\n                 } ) }\n        \n        </div>\n    )\n}\nexport default Excursions ","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/components/NavigationBar/NavigationBar.js",["237","238","239"],"import logo from '../imgs/logo2.png';\nimport { useEffect, useState } from \"react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { Nav, Navbar, Col, Row } from 'react-bootstrap';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./NavigationBar.css\"\n\n\nconst NavigationBar = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(true)\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        setIsLoggedIn(localStorage.getItem(\"loggedIn\"))\n    }, [localStorage.getItem(\"loggedIn\")]);\n\n    const logout = () => {\n        localStorage.setItem(\"loggedIn\", false)\n        setIsLoggedIn(false);\n        localStorage.removeItem(\"username\");\n        localStorage.removeItem(\"accessLevel\")\n        navigate(\"/\");\n    }\n\n    const checkStatus = () => {\n        console.log(\"Printing storage: \" + localStorage.getItem(\"loggedIn\"))\n     \n    }\n\n    return (\n        <div>\n            <Row>\n                <Col md={12}>\n                    <Navbar variant=\"dark\" expand=\"lg\" >\n                        <Link to=\"/\">\n                            <Navbar.Brand href=\"#home\">\n                                <div className='logo'>\n                                    <img src={logo}></img>\n                                </div>\n                            </Navbar.Brand>\n                        </Link>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"mr-auto\">\n                                <Link to=\"/\">\n                                    <Nav.Link href=\"/home\">\n                                        <FontAwesomeIcon icon={faHome} size=\"lg\" />\n                                    </Nav.Link>\n                                </Link>\n                                \n                                {isLoggedIn===\"true\" && localStorage.getItem(\"accessLevel\")===\"General Staff\" ? (\n                                    <>\n                                        <Link to=\"/staffDash\">\n                                        <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n                                        </Link>\n                                        <Link to=\"/calendar\">\n                                        <Nav.Link href=\"/calendar\">Calendar</Nav.Link>\n                                        </Link>\n                                        <Nav.Link onClick={() => logout()}>Logout</Nav.Link>\n                                    </>\n                                ) : (\n                                    <>\n                                    </>\n                                )}\n\n                                {isLoggedIn===\"true\" && localStorage.getItem(\"accessLevel\")===\"Customer\" ? (\n                                    <>\n                                    <Link to=\"/excursions\">\n                                    <Nav.Link href=\"/excursions\">Excursions</Nav.Link>\n                                    </Link>\n                                    <Link to=\"/customerDash\">\n                                        <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n                                    </Link>\n                                    <Nav.Link onClick={() => logout()}>Logout</Nav.Link>\n                                </>\n                                ) : (\n                                    <>\n                                    </>\n                                )\n                                }\n                                {isLoggedIn===\"false\" ?\n                                (\n                                    <>\n                                    <Link to=\"/excursions\">\n                                    <Nav.Link href=\"/excursions\">Excursions</Nav.Link>\n                                     </Link>\n                                    <Link to=\"/login\">\n                                        <Nav.Link href=\"/login\">Login</Nav.Link>\n                                    </Link>\n                                    <Link to=\"/register\">\n                                        <Nav.Link href=\"/register\">Register</Nav.Link>\n                                    </Link>\n                                </>\n\n                                ) : (\n                                    <>\n                                    </>\n                                )}\n                                \n                                {/* <Link to=\"/cart\">\n                                                <Nav.Link href=\"/cart\">\n                                                    <FontAwesomeIcon icon={faShoppingCart} size=\"lg\"/>\n                                                </Nav.Link>\n                                            </Link> */}\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                    <br />\n                </Col>\n            </Row>\n        </div>\n\n    )\n\n}\n\nexport default NavigationBar","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Landing/Landing.js",[],"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/Hiking.js",["240"],"import Axios from \"axios\";\nimport { useEffect , useState} from \"react\";\nimport {excursionDetails} from \"../../../components/excursionDetails\"\nimport {Link} from \"react-router-dom\"\nimport \"./ExcursionInfo.css\";\n\nconst Hiking = ({}) => {\n    \n    const pathname = \"/cart/hiking\"         //added stuff here\n    const index = 0;\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const name = \"2 Hour Guided Hike\"\n\n    useEffect(() => {\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n            ).then((response) => {\n                setExcursionInfo(response.data);\n            });\n    });\n\n    return (\n        <div className='excursionInfoRoot'>\n        {excursionInfo.map((val) => {\n            return(\n                <>\n                    <h2>{val.Name}</h2>\n                        <div style={{\n                            backgroundImage: \"url('\" + excursionDetails[index].imgURL + \"')\"}} className='excursionInfo'>\n                                <div className='excursionInfoDiv'>\n                                    <div className='excursionInfoDivRows'>\n                                        <div className='excursionInfoPoints'>\n                                            <h4>Cost: ${val.Cost}</h4>\n                                            <h4>Duration: {val.Duration} Hours</h4>\n                                            <h4>Months: {val.Months}</h4>\n                                        </div>\n                                        <div className='excursionInfoDescription'>\n                                            <p>{excursionDetails[index].description}</p>\n                                            <Link to={pathname}>\n                                                <div className=\"bookNowButton\">\n                                                    <button className=\"bookNowStyle\">Book Now!</button>\n                                                </div>\n                                                {/* <Button text=\"Book Now!\" buttonType=\"bookNowButton\" buttonStyle=\"bookNowStyle\"></Button> */}\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                </>\n            );\n        })} \n      </div>\n    );\n  }\n  \n  export default Hiking","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/components/excursionDetails.js",[],"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/AdultSki.js",["241"],"import Axios from \"axios\";\nimport { useEffect , useState} from \"react\";\nimport {excursionDetails} from \"../../../components/excursionDetails\"\nimport {Link} from \"react-router-dom\"\nimport \"./ExcursionInfo.css\";\n\nconst AdultSki = ({}) => {          //change\n    \n    const pathname = \"/cart/adultSki\"         //added stuff here\n    const index = 1;                            //change\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const name = \"Adult Ski Lessons\"            //change\n\n    useEffect(() => {\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n            ).then((response) => {\n                setExcursionInfo(response.data);\n            });\n    });\n\n    return (\n        <div className='excursionInfoRoot'>\n        {excursionInfo.map((val) => {\n            return(\n                <>\n                    <h2>{val.Name}</h2>\n                        <div style={{\n                            backgroundImage: \"url('\" + excursionDetails[index].imgURL + \"')\"}} className='excursionInfo'>\n                                <div className='excursionInfoDiv'>\n                                    <div className='excursionInfoDivRows'>\n                                        <div className='excursionInfoPoints'>\n                                            <h4>Cost: ${val.Cost}</h4>\n                                            <h4>Duration: {val.Duration} Hours</h4>\n                                            <h4>Months: {val.Months}</h4>\n                                        </div>\n                                        <div className='excursionInfoDescription'>\n                                            <p>{excursionDetails[index].description}</p>\n                                            <Link to={pathname}>\n                                                <div className=\"bookNowButton\">\n                                                    <button className=\"bookNowStyle\">Book Now!</button>\n                                                </div>\n                                                {/* <Button text=\"Book Now!\" buttonType=\"bookNowButton\" buttonStyle=\"bookNowStyle\"></Button> */}\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                </>\n            );\n        })} \n      </div>\n    );\n  }\n  \n  export default AdultSki           //change","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/Canoeing.js",["242"],"import Axios from \"axios\";\nimport { useEffect , useState} from \"react\";\nimport {excursionDetails} from \"../../../components/excursionDetails\"\nimport {Link} from \"react-router-dom\"\nimport \"./ExcursionInfo.css\";\n\nconst Canoeing = ({}) => {          //change\n    \n    const pathname = \"/cart/canoeing\"         //added stuff here\n    const index = 2;                            //change\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const name = \"Canoeing\"            //change\n\n    useEffect(() => {\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n            ).then((response) => {\n                setExcursionInfo(response.data);\n            });\n    });\n\n    return (\n        <div className='excursionInfoRoot'>\n        {excursionInfo.map((val) => {\n            return(\n                <>\n                    <h2>{val.Name}</h2>\n                        <div style={{\n                            backgroundImage: \"url('\" + excursionDetails[index].imgURL + \"')\"}} className='excursionInfo'>\n                                <div className='excursionInfoDiv'>\n                                    <div className='excursionInfoDivRows'>\n                                        <div className='excursionInfoPoints'>\n                                            <h4>Cost: ${val.Cost}</h4>\n                                            <h4>Duration: {val.Duration} Hours</h4>\n                                            <h4>Months: {val.Months}</h4>\n                                        </div>\n                                        <div className='excursionInfoDescription'>\n                                            <p>{excursionDetails[index].description}</p>\n                                            <Link to={pathname}>\n                                                <div className=\"bookNowButton\">\n                                                    <button className=\"bookNowStyle\">Book Now!</button>\n                                                </div>\n                                                {/* <Button text=\"Book Now!\" buttonType=\"bookNowButton\" buttonStyle=\"bookNowStyle\"></Button> */}\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                </>\n            );\n        })} \n      </div>\n    );\n  }\n  \n  export default Canoeing           //change","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/KidSki.js",["243"],"import Axios from \"axios\";\nimport { useEffect , useState} from \"react\";\nimport {excursionDetails} from \"../../../components/excursionDetails\"\nimport {Link} from \"react-router-dom\"\nimport \"./ExcursionInfo.css\";\n\nconst KidSki = ({}) => {          //change\n    \n    const pathname = \"/cart/kidSki\"         //added stuff here\n    const index = 4;                            //change\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const name = \"Kids Ski Lessons\"            //change\n\n    useEffect(() => {\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n            ).then((response) => {\n                setExcursionInfo(response.data);\n            });\n    });\n\n    return (\n        <div className='excursionInfoRoot'>\n        {excursionInfo.map((val) => {\n            return(\n                <>\n                    <h2>{val.Name}</h2>\n                        <div style={{\n                            backgroundImage: \"url('\" + excursionDetails[index].imgURL + \"')\"}} className='excursionInfo'>\n                                <div className='excursionInfoDiv'>\n                                    <div className='excursionInfoDivRows'>\n                                        <div className='excursionInfoPoints'>\n                                            <h4>Cost: ${val.Cost}</h4>\n                                            <h4>Duration: {val.Duration} Hours</h4>\n                                            <h4>Months: {val.Months}</h4>\n                                        </div>\n                                        <div className='excursionInfoDescription'>\n                                            <p>{excursionDetails[index].description}</p>\n                                            <Link to={pathname}>\n                                                <div className=\"bookNowButton\">\n                                                    <button className=\"bookNowStyle\">Book Now!</button>\n                                                </div>\n                                                {/* <Button text=\"Book Now!\" buttonType=\"bookNowButton\" buttonStyle=\"bookNowStyle\"></Button> */}\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                </>\n            );\n        })} \n      </div>\n    );\n  }\n  \n  export default KidSki           //change","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/Skating.js",["244"],"import Axios from \"axios\";\nimport { useEffect , useState} from \"react\";\nimport {excursionDetails} from \"../../../components/excursionDetails\"\nimport {Link} from \"react-router-dom\"\nimport \"./ExcursionInfo.css\";\n\nconst Skating = ({}) => {          //change\n    \n    const pathname = \"/cart/skating\"         //added stuff here\n    const index = 3;                            //change\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const name = \"Ice Skating\"            //change\n\n    useEffect(() => {\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n            ).then((response) => {\n                setExcursionInfo(response.data);\n            });\n    });\n\n    return (\n        <div className='excursionInfoRoot'>\n        {excursionInfo.map((val) => {\n            return(\n                <>\n                    <h2>{val.Name}</h2>\n                        <div style={{\n                            backgroundImage: \"url('\" + excursionDetails[index].imgURL + \"')\"}} className='excursionInfo'>\n                                <div className='excursionInfoDiv'>\n                                    <div className='excursionInfoDivRows'>\n                                        <div className='excursionInfoPoints'>\n                                            <h4>Cost: ${val.Cost}</h4>\n                                            <h4>Duration: {val.Duration} Hours</h4>\n                                            <h4>Months: {val.Months}</h4>\n                                        </div>\n                                        <div className='excursionInfoDescription'>\n                                            <p>{excursionDetails[index].description}</p>\n                                            <Link to={pathname}>\n                                                <div className=\"bookNowButton\">\n                                                    <button className=\"bookNowStyle\">Book Now!</button>\n                                                </div>\n                                                {/* <Button text=\"Book Now!\" buttonType=\"bookNowButton\" buttonStyle=\"bookNowStyle\"></Button> */}\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                </>\n            );\n        })} \n      </div>\n    );\n  }\n  \n  export default Skating           //change","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Excursions/ExcursionPages/Snowshoeing.js",["245"],"import Axios from \"axios\";\nimport { useEffect , useState} from \"react\";\nimport {excursionDetails} from \"../../../components/excursionDetails\"\nimport {Link} from \"react-router-dom\"\nimport \"./ExcursionInfo.css\";\n\nconst Snowshoeing = ({}) => {          //change\n    \n    const pathname = \"/cart/snowshoeing\"         //added stuff here\n    const index = 5;                            //change\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const name = \"Snowshoeing\"            //change\n\n    useEffect(() => {\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n            ).then((response) => {\n                setExcursionInfo(response.data);\n            });\n    });\n\n    return (\n        <div className='excursionInfoRoot'>\n        {excursionInfo.map((val) => {\n            return(\n                <>\n                    <h2>{val.Name}</h2>\n                        <div style={{\n                            backgroundImage: \"url('\" + excursionDetails[index].imgURL + \"')\"}} className='excursionInfo'>\n                                <div className='excursionInfoDiv'>\n                                    <div className='excursionInfoDivRows'>\n                                        <div className='excursionInfoPoints'>\n                                            <h4>Cost: ${val.Cost}</h4>\n                                            <h4>Duration: {val.Duration} Hours</h4>\n                                            <h4>Months: {val.Months}</h4>\n                                        </div>\n                                        <div className='excursionInfoDescription'>\n                                            <p>{excursionDetails[index].description}</p>\n                                            <Link to={pathname}>\n                                                <div className=\"bookNowButton\">\n                                                    <button className=\"bookNowStyle\">Book Now!</button>\n                                                </div>\n                                                {/* <Button text=\"Book Now!\" buttonType=\"bookNowButton\" buttonStyle=\"bookNowStyle\"></Button> */}\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                </>\n            );\n        })} \n      </div>\n    );\n  }\n  \n  export default Snowshoeing           //change","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/HikingCart.js",["246","247","248","249","250","251","252"],"import Form from 'react-bootstrap/Form'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Cart.css\"\nimport { useState, useEffect } from 'react'\nimport Axios from \"axios\"\nimport { excursionDetails } from '../../components/excursionDetails'\n\n\n\nconst HikingCart = () => {\n\n    const navigate = useNavigate();\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const [customerID, setCustomerID] = useState([])            //new\n    const customerUser = localStorage.getItem(\"username\")       //new\n    const [timeSlots, setTimeSlots] = useState([]);\n\n\n    const name = \"2 Hour Guided Hike\"\n    const index = 0;\n\n    useEffect(() => {\n        if(localStorage.getItem(\"loggedIn\")===\"false\"){\n            navigate(\"/login\");\n        }\n\n\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n        ).then((response) => {\n            setExcursionInfo(response.data);\n        });\n        Axios.get(                                                          //new\n            `http://localhost:3001/customer/${customerUser}`\n        ).then((response) => {\n            setCustomerID(response.data)\n        });\n        Axios.get(\n            `http://localhost:3001/timeSlots/${name}`)\n            .then((response) => {\n                setTimeSlots(response.data);\n        });\n    }, []);\n\n   \n\n  \n    var costPerPerson;\n\n    excursionInfo.map((val) => {\n        costPerPerson = val.Cost;\n    })\n\n    const [bookingList, setBookingList] = useState([]);\n    const [booksList, setBooksList] = useState([]);\n    const [makesList, setMakesList] = useState([]);\n\n    const [total, setTotal] = useState(0);\n    const [numMinors, setNumMinors] = useState(0);\n    const [numAdults, setNumAdults] = useState(0);\n    const [numParticipants, setNumParticipants] = useState(0);\n    \n\n    const viewUpdateSubtotal = (e) => {\n        e.preventDefault();\n        updateParticipants();\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n    }\n\n    const updateSubtotal = () => {\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n        updateParticipants();\n    }\n\n    const updateParticipants = () => {\n        const part = parseInt(numMinors) + parseInt(numAdults);\n        setNumParticipants(part)\n    }\n\n    function makeID(length) {\n        var result           = '';\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n          result += characters.charAt(Math.floor(Math.random() * \n     charactersLength));\n       }\n       return result;\n    }\n\n    const [chosenTimeSlot, setChosenTimeSlot] = useState(\"null\");\n    const bookingID = makeID(8);\n    const cost = total\n    const [agreement, setAgreement] = useState(\"\");\n    const receipt = \"I agree to pay the total cost onsite\"\n\n\n    const submitBooking = (e) => {\n            var custID                      //new\n            customerID.map((val) => {\n                custID = val.CustomerID\n            })\n            e.preventDefault();\n            updateSubtotal();\n            updateParticipants();\n            console.log(\"Time Slot:\" + chosenTimeSlot);\n            console.log(\"BookingID:\" + bookingID);\n            console.log(\"Cost:\" + cost);\n            console.log(\"Participants:\" + numParticipants);\n            console.log(\"Agreement Signature:\" + agreement);\n            console.log(\"Minors: \" + numMinors);\n            console.log(\"Adults: \" + numAdults);\n            console.log(\"Total: \" + total)\n\n\n            if(numParticipants !== 0 && chosenTimeSlot != \"null\"){\n                if(numAdults!=0 || numMinors!=0){\n            Axios.post(\"http://localhost:3001/createBooking\", {\n\n                bookingID: bookingID,\n                numAdults : numAdults,\n                numMinors : numMinors,\n                cost : cost,\n                chosenTimeSlot : chosenTimeSlot,\n\n            }).then(() => {\n                setBookingList([\n                    ...bookingList,\n                    {\n                        bookingID: bookingID,\n                        numAdults : numAdults,\n                        numMinors : numMinors,\n                        cost : cost,\n                        chosenTimeSlot : chosenTimeSlot,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/Books\", {\n                bookingID: bookingID,\n                name: name,\n                numParticipants: numParticipants,\n            }).then(() => {\n                setBooksList([\n                    ...booksList,\n                    {\n                        bookingID: bookingID,\n                        name: name,\n                        numParticipants: numParticipants,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/MakesBooking\", {\n                customerID: custID,\n                bookingID: bookingID,\n                receipt: receipt,\n                agreement: agreement\n            }).then(() => {\n                setMakesList([\n                    ...makesList,\n                    {\n                        customerID: custID,\n                        bookingID: bookingID,\n                        receipt: receipt,\n                        agreement: agreement\n                    },\n                ]);\n            });\n            navigate(\"/bookingConf\")\n        }\n    }\n    };\n\n    return (\n        <div className='cartBlock'>\n            <div className='cartHeader'>\n                <h2>Cart</h2>\n            </div>\n            {excursionInfo.map((val, key) => {\n                return (\n                    <>\n                        <div className='cartExcursionDetails'>\n                            <div className='cartExcursionImg'>\n                                <img src={excursionDetails[index].imgURL} />\n                            </div>\n                            <div className='cartExcursionDetailsText'>\n                                <div className='cartExcursionDetailsTitle'>\n                                    <h3>{val.Name}</h3>\n                                </div>\n                                <div className='cartExcursionDetailsDate'>\n                                    <Form>\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                            <Form.Label>Booking Date: </Form.Label>\n                                            <Form.Select type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setChosenTimeSlot(e.target.value)} required>\n                                                <option value=\"null\">Date and Time</option>\n                                                {timeSlots.map((timeSlots => <option value={timeSlots.TimeSlot}>{timeSlots.Date.substr(0, 10)} @ {timeSlots.Start}:00 MST</option>\n                                                )\n                                                )}\n                                            </Form.Select>\n                                        </Form.Group>\n                                        <div className=\"participants\">\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Adults: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setNumAdults(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                    <option value=\"1\" >1</option>\n                                                    <option value=\"2\" >2</option>\n                                                    <option value=\"3\" >3</option>\n                                                    <option value=\"4\" >4</option>\n                                                    <option value=\"5\" >5</option>\n                                                    <option value=\"6\" >6</option>\n                                                    <option value=\"7\" >7</option>\n                                                    <option value=\"8\" >8</option>\n                                                    <option value=\"9\" >9</option>\n                                                    <option value=\"10\" >10</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Minors: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e) => setNumMinors(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                    <option value=\"1\" >1</option>\n                                                    <option value=\"2\" >2</option>\n                                                    <option value=\"3\" >3</option>\n                                                    <option value=\"4\" >4</option>\n                                                    <option value=\"5\" >5</option>\n                                                    <option value=\"6\" >6</option>\n                                                    <option value=\"7\" >7</option>\n                                                    <option value=\"8\" >8</option>\n                                                    <option value=\"9\" >9</option>\n                                                    <option value=\"10\" >10</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                        </div>\n                                    </Form>\n\n                                    <h4>Cost Per Person: ${val.Cost}.00</h4>\n                                </div>\n                            </div>\n                        </div>\n\n\n                    </>\n                );\n            })};\n            <div className='cartFooter'>\n                <form>\n                    <label>\n                        I understand the risk associated with the above activities. <br /><br />I understand the terms and conditions of service: <br /><br />\n\n                        <input size=\"40\" type=\"text\" name=\"name\" placeholder=\"Signature\" onChange={(e)=>setAgreement(e.target.value)}required />\n                    </label>\n                        <div className=\"completeButton\">\n                            <button className=\"completeStyle\" onClick={(e)=>submitBooking(e)} >Complete Order</button>\n                        </div>\n                </form>\n                <div className=\"subtotal\">\n                    <div className=\"recalculate\">\n                        <button className=\"recalculateButton\" onClick={(e)=>viewUpdateSubtotal(e)}>Update Total Cost</button>\n                    </div>\n                <h4>Subtotal: ${total}.00</h4>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default HikingCart\n","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Registration/Registration.js",["253","254","255"],"import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport \"./Registration.css\"\nimport { useState, useEffect } from 'react'\nimport  Axios  from 'axios'\nimport { useNavigate } from 'react-router'\n\nconst Registration = () => {\n    const navigate = useNavigate();\n    const [customerList, setCustomerList] = useState([])\n    const [accountList, setAccountList] = useState([])\n    const [emergList, setEmergList] = useState([])\n\n    const [customerCount, setCustomerCount] = useState([])\n\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [dob, setDob] = useState(\"\")\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [streetAddress, setStreetAddress] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [country, setCountry] = useState(\"\")\n    const [postalCode, setPostalCode] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [emergeName, setEmergeName] = useState(\"\")\n    const [emergePhone, setEmergePhone] = useState(\"\")\n    const [emergeRel, setEmergeRel] = useState(\"\")\n    const [hotelID, setHotelID] = useState()\n\n    const [hotels, setHotels] = useState([])\n\n    useEffect(() => {\n      Axios.get(`http://localhost:3001/hotels`)\n      .then((response) => {\n        setHotels(response.data);\n      });\n\n      Axios.get(`http://localhost:3001/customerCount`)\n      .then((response) => {\n        setCustomerCount(response.data);\n      });\n        console.log(customerCount)\n    }, [])\n\n    const register = (e) => {\n      e.preventDefault();\n\n      var custCount = 0;\n      customerCount.map((val) => {\n        custCount = val.Count\n      })\n\n      console.log(\"Printing: \" + custCount)\n      console.log(email)\n      console.log(firstName)\n      console.log(lastName)\n      console.log(dob)\n      console.log(username)\n      console.log(password)\n      console.log(streetAddress)\n      console.log(city)\n      console.log(country)\n      console.log(postalCode)\n      console.log(phoneNumber)\n      console.log(emergeName)\n      console.log(emergePhone)\n      console.log(emergeRel)\n      console.log(hotelID)\n      if(email!==\"\" && firstName!==\"\" && lastName!==\"\" && dob!==\"\" && username!==\"\" && password!==\"\" && streetAddress!==\"\" && city!==\"\"){\n        if(country!==\"\" && postalCode!==\"\" && phoneNumber!==\"\" && emergeName!==\"\" && emergePhone!==\"\" && emergeRel!==\"\"){\n\n          \n          \n\n          Axios.post(\"http://localhost:3001/registerAccount\", {\n            Username: username,\n            Password: password,\n            Email: email,\n            AccessLevel: \"Customer\",\n          }).then(() => {\n            setAccountList([\n              ...accountList,\n              {\n                Username: username,\n                Password: password,\n                Email: email,\n                AccessLevel: \"Customer\",\n              },\n            ]);\n          });\n\n          Axios.post(\"http://localhost:3001/registerCustomer\", {\n            \n            CustomerID: custCount + 1,\n            FirstName: firstName,\n            LastName: lastName,\n            Address: streetAddress,\n            City: city,\n            Country: country,\n            PostalCode: postalCode,\n            PhoneNumber: phoneNumber,\n            DOB: dob,\n            HotelID: hotelID,\n            AccountUsername: username,\n          }).then(()=> {\n            setCustomerList([\n              ...customerList,\n              {\n                FirstName: firstName,\n                LastName: lastName,\n                Address: streetAddress,\n                City: city,\n                Country: country,\n                PostalCode: postalCode,\n                PhoneNumber: phoneNumber,\n                DOB: dob,\n                HotelID: hotelID,\n                AccountUsername: username,\n              },\n            ]);\n          });\n\n          Axios.post(\"http://localhost:3001/registerEmergContact\", {\n          \n            EmergencyName: emergeName,\n            EmergencyPhone: emergePhone,\n            Relationship: emergeRel,\n            CustomerID: custCount + 1,\n          }).then(()=> {\n            setEmergList([\n              ...emergList,\n              {\n                EmergencyName: emergeName,\n                EmergencyPhone: emergePhone,\n                Relationship: emergeRel,\n                CustomerID: custCount + 1,\n              },\n            ]);\n          });\n          navigate(\"/\");\n        }\n      }\n    }\n\n    return (\n    <div className=\"registrationRoot\">\n    <h1>Registration</h1>\n    <h2>Personal Information</h2>\n    <Form>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n    <Form.Label>Email Address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setEmail(e.target.value)} required />\n  </Form.Group>\n  \n  <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n    <Form.Label>First Name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"First Name\" onChange={(e)=>setFirstName(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n    <Form.Label>Last Name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Last Name\" onChange={(e)=>setLastName(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicDOB\">\n    <Form.Label>Date of Birth</Form.Label>\n    <Form.Control type=\"date\" placeholder=\"DOB\" onChange={(e)=>setDob(e.target.value)} required/>\n  </Form.Group>\n\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Username\" onChange={(e)=>setUsername(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e)=>setPassword(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n    <Form.Label>Street Address</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Address\" onChange={(e)=>setStreetAddress(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n    <Form.Label>City</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"City\" onChange={(e)=>setCity(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n    <Form.Label>Country</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Country\" onChange={(e)=>setCountry(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n    <Form.Label>Postal Code</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Postal Code: A1A 1A1\" pattern=\"[A-Z]{1}[0-9]{1}[A-Z]{1} [0-9]{1}[A-Z]{1}[0-9]{1}\" onChange={(e)=>setPostalCode(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\n    <Form.Label>Phone Number</Form.Label>\n    <Form.Control type=\"tel\" placeholder=\"Phone: 123-123-1234\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" onChange={(e)=>setPhoneNumber(e.target.value)} required/>\n  </Form.Group>\n\n  \n\n  <h2>Emergency Contact Information</h2>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n    <Form.Label>Full Name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Name\" onChange={(e)=>setEmergeName(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\n    <Form.Label>Phone Number</Form.Label>\n    <Form.Control type=\"tel\" placeholder=\"Phone: 123-123-1234\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" onChange={(e)=>setEmergePhone(e.target.value)} required/>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicRelation\">\n    <Form.Label>Relationship</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Relationship\" onChange={(e)=>setEmergeRel(e.target.value)} required/>\n  </Form.Group>\n\n  <h2>Hotel Information (Optional)</h2>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicHotelID\">\n    <Form.Label>Hotel Name</Form.Label>\n    <Form.Select type=\"text\" onChange={(e)=>setHotelID(e.target.value)}>\n      <option>Select</option>\n      {hotels.map((hotels=> <option value={hotels.PartnerID}>{hotels.Name}</option>))}\n    </Form.Select>\n  </Form.Group>\n  \n  <div className=\"buttonDiv\">\n  <button className=\"regButton\" onClick={(e)=>register(e)}>Register!</button>\n  \n  </div>\n</Form>\n</div>\n    )\n}\n\nexport default Registration;","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/AdultSkiCart.js",["256","257","258","259","260","261","262"],"import Form from 'react-bootstrap/Form'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Cart.css\"\nimport { useState, useEffect } from 'react'\nimport Axios from \"axios\"\nimport { excursionDetails } from '../../components/excursionDetails'\n\n\n\nconst AdultSkiCart = () => {\n\n    const navigate = useNavigate();\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const [customerID, setCustomerID] = useState([])            //new\n    const customerUser = localStorage.getItem(\"username\")       //new\n    const [timeSlots, setTimeSlots] = useState([]);\n\n    const name = \"Adult Ski Lessons\"\n    const index = 1;\n\n    useEffect(() => {\n\n        if(localStorage.getItem(\"loggedIn\")===\"false\"){\n            navigate(\"/login\");\n        }\n\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n        ).then((response) => {\n            setExcursionInfo(response.data);\n        });\n\n        Axios.get(                                                          //new\n            `http://localhost:3001/customer/${customerUser}`\n        ).then((response) => {\n            setCustomerID(response.data)\n        })\n\n        Axios.get(\n            `http://localhost:3001/timeSlots/${name}`)\n            .then((response) => {\n                setTimeSlots(response.data);\n        });\n\n    }, []);\n\n    \n\n  \n    var costPerPerson;\n\n    excursionInfo.map((val) => {\n        costPerPerson = val.Cost;\n    })\n\n    const [bookingList, setBookingList] = useState([]);\n    const [booksList, setBooksList] = useState([]);\n    const [makesList, setMakesList] = useState([]);\n\n    const [total, setTotal] = useState(0);\n    const [numMinors, setNumMinors] = useState(0);\n    const [numAdults, setNumAdults] = useState(0);\n    const [numParticipants, setNumParticipants] = useState(0);\n    \n\n    const viewUpdateSubtotal = (e) => {\n        e.preventDefault();\n        updateParticipants();\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n    }\n\n    const updateSubtotal = () => {\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n        updateParticipants();\n    }\n\n    const updateParticipants = () => {\n        const part = parseInt(numMinors) + parseInt(numAdults);\n        setNumParticipants(part)\n    }\n\n    function makeID(length) {\n        var result           = '';\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n          result += characters.charAt(Math.floor(Math.random() * \n     charactersLength));\n       }\n       return result;\n    }\n\n    const [chosenTimeSlot, setChosenTimeSlot] = useState(\"null\");\n    const bookingID = makeID(8);\n    const cost = total\n    const [agreement, setAgreement] = useState(\"\");\n    const receipt = \"I agree to pay the total cost onsite\"\n\n\n\n    const submitBooking = (e) => {\n            var custID                      //new\n            customerID.map((val) => {\n                custID = val.CustomerID\n            })\n            e.preventDefault();\n            updateSubtotal();\n            updateParticipants();\n            console.log(\"Time Slot:\" + chosenTimeSlot);\n            console.log(\"BookingID:\" + bookingID);\n            console.log(\"Cost:\" + cost);\n            console.log(\"Participants:\" + numParticipants);\n            console.log(\"Agreement Signature:\" + agreement);\n            console.log(\"Minors: \" + numMinors);\n            console.log(\"Adults: \" + numAdults);\n            console.log(\"Total: \" + total)\n\n\n            if(numParticipants !== 0 && chosenTimeSlot != \"null\"){\n                if(numAdults!=0 || numMinors!=0){\n            Axios.post(\"http://localhost:3001/createBooking\", {\n\n                bookingID: bookingID,\n                numAdults : numAdults,\n                numMinors : numMinors,\n                cost : cost,\n                chosenTimeSlot : chosenTimeSlot,\n\n            }).then(() => {\n                setBookingList([\n                    ...bookingList,\n                    {\n                        bookingID: bookingID,\n                        numAdults : numAdults,\n                        numMinors : numMinors,\n                        cost : cost,\n                        chosenTimeSlot : chosenTimeSlot,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/Books\", {\n                bookingID: bookingID,\n                name: name,\n                numParticipants: numParticipants,\n            }).then(() => {\n                setBooksList([\n                    ...booksList,\n                    {\n                        bookingID: bookingID,\n                        name: name,\n                        numParticipants: numParticipants,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/MakesBooking\", {\n                customerID: custID,\n                bookingID: bookingID,\n                receipt: receipt,\n                agreement: agreement\n            }).then(() => {\n                setMakesList([\n                    ...makesList,\n                    {\n                        customerID: custID,\n                        bookingID: bookingID,\n                        receipt: receipt,\n                        agreement: agreement\n                    },\n                ]);\n            });\n            navigate(\"/bookingConf\")\n        }\n    }\n    };\n\n    return (\n        <div className='cartBlock'>\n            <div className='cartHeader'>\n                <h2>Cart</h2>\n            </div>\n            {excursionInfo.map((val, key) => {\n                return (\n                    <>\n                        <div className='cartExcursionDetails'>\n                            <div className='cartExcursionImg'>\n                                <img src={excursionDetails[index].imgURL} />\n                            </div>\n                            <div className='cartExcursionDetailsText'>\n                                <div className='cartExcursionDetailsTitle'>\n                                    <h3>{val.Name}</h3>\n                                </div>\n                                <div className='cartExcursionDetailsDate'>\n                                    <Form>\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                            <Form.Label>Booking Date: </Form.Label>\n                                            <Form.Select type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setChosenTimeSlot(e.target.value)} required>\n                                                <option value=\"null\">Date and Time</option>\n                                                {timeSlots.map((timeSlots => <option value={timeSlots.TimeSlot}>{timeSlots.Date.substr(0, 10)} @ {timeSlots.Start}:00 MST</option>\n                                                )\n                                                )}\n                                            </Form.Select>\n                                        </Form.Group>\n                                        <div className=\"participants\">\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Adults: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setNumAdults(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                    <option value=\"1\" >1</option>\n                                                    <option value=\"2\" >2</option>\n                                                    <option value=\"3\" >3</option>\n                                                    <option value=\"4\" >4</option>\n                                                    <option value=\"5\" >5</option>\n                                                    <option value=\"6\" >6</option>\n                                                    <option value=\"7\" >7</option>\n                                                    <option value=\"8\" >8</option>\n                                                    <option value=\"9\" >9</option>\n                                                    <option value=\"10\" >10</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Minors: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e) => setNumMinors(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                        </div>\n                                    </Form>\n\n                                    <h4>Cost Per Person: ${val.Cost}.00</h4>\n                                </div>\n                            </div>\n                        </div>\n\n\n                    </>\n                );\n            })};\n            <div className='cartFooter'>\n                <form>\n                    <label>\n                        I understand the risk associated with the above activities. <br /><br />I understand the terms and conditions of service: <br /><br />\n\n                        <input size=\"40\" type=\"text\" name=\"name\" placeholder=\"Signature\" onChange={(e)=>setAgreement(e.target.value)}required />\n                    </label>\n                        <div className=\"completeButton\">\n                            <button className=\"completeStyle\" onClick={(e)=>submitBooking(e)} >Complete Order</button>\n                        </div>\n                </form>\n                <div className=\"subtotal\">\n                    <div className=\"recalculate\">\n                        <button className=\"recalculateButton\" onClick={(e)=>viewUpdateSubtotal(e)}>Update Total Cost</button>\n                    </div>\n                <h4>Subtotal: ${total}.00</h4>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AdultSkiCart\n","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/CanoeingCart.js",["263","264","265","266","267","268","269"],"import Form from 'react-bootstrap/Form'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Cart.css\"\nimport { useState, useEffect } from 'react'\nimport Axios from \"axios\"\nimport { excursionDetails } from '../../components/excursionDetails'\n\n\n\nconst CanoeingCart = () => {\n\n    const navigate = useNavigate();\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const [customerID, setCustomerID] = useState([])            //new\n    const customerUser = localStorage.getItem(\"username\")       //new\n    const [timeSlots, setTimeSlots] = useState([]);\n\n    const name = \"Canoeing\"\n    const index = 2;\n\n    useEffect(() => {\n\n        if(localStorage.getItem(\"loggedIn\")===\"false\"){\n            navigate(\"/login\");\n        }\n\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n        ).then((response) => {\n            setExcursionInfo(response.data);\n        });\n\n        Axios.get(                                                          //new\n            `http://localhost:3001/customer/${customerUser}`\n        ).then((response) => {\n            setCustomerID(response.data)\n        });\n        Axios.get(\n            `http://localhost:3001/timeSlots/${name}`)\n            .then((response) => {\n                setTimeSlots(response.data);\n        });\n    }, []);\n\n    \n\n  \n    var costPerPerson;\n\n    excursionInfo.map((val) => {\n        costPerPerson = val.Cost;\n    })\n\n    const [bookingList, setBookingList] = useState([]);\n    const [booksList, setBooksList] = useState([]);\n    const [makesList, setMakesList] = useState([]);\n\n    const [total, setTotal] = useState(0);\n    const [numMinors, setNumMinors] = useState(0);\n    const [numAdults, setNumAdults] = useState(0);\n    const [numParticipants, setNumParticipants] = useState(0);\n    \n\n    const viewUpdateSubtotal = (e) => {\n        e.preventDefault();\n        updateParticipants();\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n    }\n\n    const updateSubtotal = () => {\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n        updateParticipants();\n    }\n\n    const updateParticipants = () => {\n        const part = parseInt(numMinors) + parseInt(numAdults);\n        setNumParticipants(part)\n    }\n\n    function makeID(length) {\n        var result           = '';\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n          result += characters.charAt(Math.floor(Math.random() * \n     charactersLength));\n       }\n       return result;\n    }\n\n    const [chosenTimeSlot, setChosenTimeSlot] = useState(\"null\");\n    const bookingID = makeID(8);\n    const cost = total\n    const [agreement, setAgreement] = useState(\"\");\n    const receipt = \"I agree to pay the total cost onsite\"\n\n\n    const submitBooking = (e) => {\n            var custID                      //new\n            customerID.map((val) => {\n                custID = val.CustomerID\n            })\n            e.preventDefault();\n            updateSubtotal();\n            updateParticipants();\n            console.log(\"Time Slot:\" + chosenTimeSlot);\n            console.log(\"BookingID:\" + bookingID);\n            console.log(\"Cost:\" + cost);\n            console.log(\"Participants:\" + numParticipants);\n            console.log(\"Agreement Signature:\" + agreement);\n            console.log(\"Minors: \" + numMinors);\n            console.log(\"Adults: \" + numAdults);\n            console.log(\"Total: \" + total)\n\n\n            if(numParticipants !== 0 && chosenTimeSlot != \"null\"){\n                if(numAdults!=0 || numMinors!=0){\n            Axios.post(\"http://localhost:3001/createBooking\", {\n\n                bookingID: bookingID,\n                numAdults : numAdults,\n                numMinors : numMinors,\n                cost : cost,\n                chosenTimeSlot : chosenTimeSlot,\n\n            }).then(() => {\n                setBookingList([\n                    ...bookingList,\n                    {\n                        bookingID: bookingID,\n                        numAdults : numAdults,\n                        numMinors : numMinors,\n                        cost : cost,\n                        chosenTimeSlot : chosenTimeSlot,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/Books\", {\n                bookingID: bookingID,\n                name: name,\n                numParticipants: numParticipants,\n            }).then(() => {\n                setBooksList([\n                    ...booksList,\n                    {\n                        bookingID: bookingID,\n                        name: name,\n                        numParticipants: numParticipants,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/MakesBooking\", {\n                customerID: custID,\n                bookingID: bookingID,\n                receipt: receipt,\n                agreement: agreement\n            }).then(() => {\n                setMakesList([\n                    ...makesList,\n                    {\n                        customerID: custID,\n                        bookingID: bookingID,\n                        receipt: receipt,\n                        agreement: agreement\n                    },\n                ]);\n            });\n            navigate(\"/bookingConf\")\n        }\n    }\n    };\n\n    return (\n        <div className='cartBlock'>\n            <div className='cartHeader'>\n                <h2>Cart</h2>\n            </div>\n            {excursionInfo.map((val, key) => {\n                return (\n                    <>\n                        <div className='cartExcursionDetails'>\n                            <div className='cartExcursionImg'>\n                                <img src={excursionDetails[index].imgURL} />\n                            </div>\n                            <div className='cartExcursionDetailsText'>\n                                <div className='cartExcursionDetailsTitle'>\n                                    <h3>{val.Name}</h3>\n                                </div>\n                                <div className='cartExcursionDetailsDate'>\n                                    <Form>\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                            <Form.Label>Booking Date: </Form.Label>\n                                            <Form.Select type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setChosenTimeSlot(e.target.value)} required>\n                                                <option value=\"null\">Date and Time</option>\n                                                {timeSlots.map((timeSlots => <option value={timeSlots.TimeSlot}>{timeSlots.Date.substr(0, 10)} @ {timeSlots.Start}:00 MST</option>\n                                                )\n                                                )}\n                                            </Form.Select>\n                                        </Form.Group>\n                                        <div className=\"participants\">\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Adults: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setNumAdults(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                    <option value=\"1\" >1</option>\n                                                    <option value=\"2\" >2</option>\n                                                    <option value=\"3\" >3</option>\n                                                    <option value=\"4\" >4</option>\n                                                    <option value=\"5\" >5</option>\n                                                    <option value=\"6\" >6</option>\n                                                    <option value=\"7\" >7</option>\n                                                    <option value=\"8\" >8</option>\n                                                    <option value=\"9\" >9</option>\n                                                    <option value=\"10\" >10</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Minors: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e) => setNumMinors(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                    <option value=\"1\" >1</option>\n                                                    <option value=\"2\" >2</option>\n                                                    <option value=\"3\" >3</option>\n                                                    <option value=\"4\" >4</option>\n                                                    <option value=\"5\" >5</option>\n                                                    <option value=\"6\" >6</option>\n                                                    <option value=\"7\" >7</option>\n                                                    <option value=\"8\" >8</option>\n                                                    <option value=\"9\" >9</option>\n                                                    <option value=\"10\" >10</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                        </div>\n                                    </Form>\n\n                                    <h4>Cost Per Person: ${val.Cost}.00</h4>\n                                </div>\n                            </div>\n                        </div>\n\n\n                    </>\n                );\n            })};\n            <div className='cartFooter'>\n                <form>\n                    <label>\n                        I understand the risk associated with the above activities. <br /><br />I understand the terms and conditions of service: <br /><br />\n\n                        <input size=\"40\" type=\"text\" name=\"name\" placeholder=\"Signature\" onChange={(e)=>setAgreement(e.target.value)}required />\n                    </label>\n                        <div className=\"completeButton\">\n                            <button className=\"completeStyle\" onClick={(e)=>submitBooking(e)} >Complete Order</button>\n                        </div>\n                </form>\n                <div className=\"subtotal\">\n                    <div className=\"recalculate\">\n                        <button className=\"recalculateButton\" onClick={(e)=>viewUpdateSubtotal(e)}>Update Total Cost</button>\n                    </div>\n                <h4>Subtotal: ${total}.00</h4>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CanoeingCart\n","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/SkatingCart.js",["270","271","272","273","274","275","276"],"import Form from 'react-bootstrap/Form'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Cart.css\"\nimport { useState, useEffect } from 'react'\nimport Axios from \"axios\"\nimport { excursionDetails } from '../../components/excursionDetails'\n\n\n\nconst SkatingCart = () => {\n\n    const navigate = useNavigate();\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const [customerID, setCustomerID] = useState([])            //new\n    const customerUser = localStorage.getItem(\"username\")       //new\n    const [timeSlots, setTimeSlots] = useState([]);\n\n    const name = \"Ice Skating\"\n    const index = 3;\n\n    useEffect(() => {\n\n        if(localStorage.getItem(\"loggedIn\")===\"false\"){\n            navigate(\"/login\");\n        }\n\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n        ).then((response) => {\n            setExcursionInfo(response.data);\n        });\n        Axios.get(                                                          //new\n            `http://localhost:3001/customer/${customerUser}`\n        ).then((response) => {\n            setCustomerID(response.data)\n        });\n        Axios.get(\n            `http://localhost:3001/timeSlots/${name}`)\n            .then((response) => {\n                setTimeSlots(response.data);\n        });\n    }, []);\n\n     \n    var costPerPerson;\n\n    excursionInfo.map((val) => {\n        costPerPerson = val.Cost;\n    })\n\n    const [bookingList, setBookingList] = useState([]);\n    const [booksList, setBooksList] = useState([]);\n    const [makesList, setMakesList] = useState([]);\n\n    const [total, setTotal] = useState(0);\n    const [numMinors, setNumMinors] = useState(0);\n    const [numAdults, setNumAdults] = useState(0);\n    const [numParticipants, setNumParticipants] = useState(0);\n    \n\n    const viewUpdateSubtotal = (e) => {\n        e.preventDefault();\n        updateParticipants();\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n    }\n\n    const updateSubtotal = () => {\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n        updateParticipants();\n    }\n\n    const updateParticipants = () => {\n        const part = parseInt(numMinors) + parseInt(numAdults);\n        setNumParticipants(part)\n    }\n\n    function makeID(length) {\n        var result           = '';\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n          result += characters.charAt(Math.floor(Math.random() * \n     charactersLength));\n       }\n       return result;\n    }\n\n    const [chosenTimeSlot, setChosenTimeSlot] = useState(\"null\");\n    const bookingID = makeID(8);\n    const cost = total\n    const [agreement, setAgreement] = useState(\"\");\n    const receipt = \"I agree to pay the total cost onsite\"\n\n\n    const submitBooking = (e) => {\n            var custID                      //new\n            customerID.map((val) => {\n                custID = val.CustomerID\n            })\n            e.preventDefault();\n            updateSubtotal();\n            updateParticipants();\n            console.log(\"Time Slot:\" + chosenTimeSlot);\n            console.log(\"BookingID:\" + bookingID);\n            console.log(\"Cost:\" + cost);\n            console.log(\"Participants:\" + numParticipants);\n            console.log(\"Agreement Signature:\" + agreement);\n            console.log(\"Minors: \" + numMinors);\n            console.log(\"Adults: \" + numAdults);\n            console.log(\"Total: \" + total)\n\n\n            if(numParticipants !== 0 && chosenTimeSlot != \"null\"){\n                if(numAdults!=0 || numMinors!=0){\n            Axios.post(\"http://localhost:3001/createBooking\", {\n\n                bookingID: bookingID,\n                numAdults : numAdults,\n                numMinors : numMinors,\n                cost : cost,\n                chosenTimeSlot : chosenTimeSlot,\n\n            }).then(() => {\n                setBookingList([\n                    ...bookingList,\n                    {\n                        bookingID: bookingID,\n                        numAdults : numAdults,\n                        numMinors : numMinors,\n                        cost : cost,\n                        chosenTimeSlot : chosenTimeSlot,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/Books\", {\n                bookingID: bookingID,\n                name: name,\n                numParticipants: numParticipants,\n            }).then(() => {\n                setBooksList([\n                    ...booksList,\n                    {\n                        bookingID: bookingID,\n                        name: name,\n                        numParticipants: numParticipants,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/MakesBooking\", {\n                customerID: custID,\n                bookingID: bookingID,\n                receipt: receipt,\n                agreement: agreement\n            }).then(() => {\n                setMakesList([\n                    ...makesList,\n                    {\n                        customerID: custID,\n                        bookingID: bookingID,\n                        receipt: receipt,\n                        agreement: agreement\n                    },\n                ]);\n            });\n            navigate(\"/bookingConf\")\n        }\n    }\n    };\n\n    return (\n        <div className='cartBlock'>\n            <div className='cartHeader'>\n                <h2>Cart</h2>\n            </div>\n            {excursionInfo.map((val, key) => {\n                return (\n                    <>\n                        <div className='cartExcursionDetails'>\n                            <div className='cartExcursionImg'>\n                                <img src={excursionDetails[index].imgURL} />\n                            </div>\n                            <div className='cartExcursionDetailsText'>\n                                <div className='cartExcursionDetailsTitle'>\n                                    <h3>{val.Name}</h3>\n                                </div>\n                                <div className='cartExcursionDetailsDate'>\n                                    <Form>\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                            <Form.Label>Booking Date: </Form.Label>\n                                            <Form.Select type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setChosenTimeSlot(e.target.value)} required>\n                                                <option value=\"null\">Date and Time</option>\n                                                {timeSlots.map((timeSlots => <option value={timeSlots.TimeSlot}>{timeSlots.Date.substr(0, 10)} @ {timeSlots.Start}:00 MST</option>\n                                                )\n                                                )}\n                                            </Form.Select>\n                                        </Form.Group>\n                                        <div className=\"participants\">\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Adults: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setNumAdults(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                    <option value=\"1\" >1</option>\n                                                    <option value=\"2\" >2</option>\n                                                    <option value=\"3\" >3</option>\n                                                    <option value=\"4\" >4</option>\n                                                    <option value=\"5\" >5</option>\n                                                    <option value=\"6\" >6</option>\n                                                    <option value=\"7\" >7</option>\n                                                    <option value=\"8\" >8</option>\n                                                    <option value=\"9\" >9</option>\n                                                    <option value=\"10\" >10</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Minors: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e) => setNumMinors(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                    <option value=\"1\" >1</option>\n                                                    <option value=\"2\" >2</option>\n                                                    <option value=\"3\" >3</option>\n                                                    <option value=\"4\" >4</option>\n                                                    <option value=\"5\" >5</option>\n                                                    <option value=\"6\" >6</option>\n                                                    <option value=\"7\" >7</option>\n                                                    <option value=\"8\" >8</option>\n                                                    <option value=\"9\" >9</option>\n                                                    <option value=\"10\" >10</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                        </div>\n                                    </Form>\n\n                                    <h4>Cost Per Person: ${val.Cost}.00</h4>\n                                </div>\n                            </div>\n                        </div>\n\n\n                    </>\n                );\n            })};\n            <div className='cartFooter'>\n                <form>\n                    <label>\n                        I understand the risk associated with the above activities. <br /><br />I understand the terms and conditions of service: <br /><br />\n\n                        <input size=\"40\" type=\"text\" name=\"name\" placeholder=\"Signature\" onChange={(e)=>setAgreement(e.target.value)}required />\n                    </label>\n                        <div className=\"completeButton\">\n                            <button className=\"completeStyle\" onClick={(e)=>submitBooking(e)} >Complete Order</button>\n                        </div>\n                </form>\n                <div className=\"subtotal\">\n                    <div className=\"recalculate\">\n                        <button className=\"recalculateButton\" onClick={(e)=>viewUpdateSubtotal(e)}>Update Total Cost</button>\n                    </div>\n                <h4>Subtotal: ${total}.00</h4>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SkatingCart\n","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/SnowshoeingCart.js",["277","278","279","280","281","282","283"],"import Form from 'react-bootstrap/Form'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Cart.css\"\nimport { useState, useEffect } from 'react'\nimport Axios from \"axios\"\nimport { excursionDetails } from '../../components/excursionDetails'\n\n\n\nconst SnowshoeingCart = () => {\n\n    const navigate = useNavigate();\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const [customerID, setCustomerID] = useState([])            //new\n    const customerUser = localStorage.getItem(\"username\")       //new\n    const [timeSlots, setTimeSlots] = useState([]);\n\n    const name = \"Snowshoeing\"\n    const index = 5;\n\n    useEffect(() => {\n\n        if(localStorage.getItem(\"loggedIn\")===\"false\"){\n            navigate(\"/login\");\n        }\n\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n        ).then((response) => {\n            setExcursionInfo(response.data);\n        });\n\n        Axios.get(                                                          //new\n            `http://localhost:3001/customer/${customerUser}`\n        ).then((response) => {\n            setCustomerID(response.data)\n        });\n        Axios.get(\n            `http://localhost:3001/timeSlots/${name}`)\n            .then((response) => {\n                setTimeSlots(response.data);\n        });\n\n    }, []);\n\n  \n    var costPerPerson;\n\n    excursionInfo.map((val) => {\n        costPerPerson = val.Cost;\n    })\n\n    const [bookingList, setBookingList] = useState([]);\n    const [booksList, setBooksList] = useState([]);\n    const [makesList, setMakesList] = useState([]);\n\n    const [total, setTotal] = useState(0);\n    const [numMinors, setNumMinors] = useState(0);\n    const [numAdults, setNumAdults] = useState(0);\n    const [numParticipants, setNumParticipants] = useState(0);\n    \n\n    const viewUpdateSubtotal = (e) => {\n        e.preventDefault();\n        updateParticipants();\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n    }\n\n    const updateSubtotal = () => {\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n        updateParticipants();\n    }\n\n    const updateParticipants = () => {\n        const part = parseInt(numMinors) + parseInt(numAdults);\n        setNumParticipants(part)\n    }\n\n    function makeID(length) {\n        var result           = '';\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n          result += characters.charAt(Math.floor(Math.random() * \n     charactersLength));\n       }\n       return result;\n    }\n\n    const [chosenTimeSlot, setChosenTimeSlot] = useState(\"null\");\n    const bookingID = makeID(8);\n    const cost = total\n    const [agreement, setAgreement] = useState(\"\");\n    const receipt = \"I agree to pay the total cost onsite\"\n    \n\n\n    const submitBooking = (e) => {\n            var custID                      //new\n            customerID.map((val) => {\n                custID = val.CustomerID\n            })\n            e.preventDefault();\n            updateSubtotal();\n            updateParticipants();\n            console.log(\"Time Slot:\" + chosenTimeSlot);\n            console.log(\"BookingID:\" + bookingID);\n            console.log(\"Cost:\" + cost);\n            console.log(\"Participants:\" + numParticipants);\n            console.log(\"Agreement Signature:\" + agreement);\n            console.log(\"Minors: \" + numMinors);\n            console.log(\"Adults: \" + numAdults);\n            console.log(\"Total: \" + total)\n\n\n            if(numParticipants !== 0 && chosenTimeSlot != \"null\"){\n                if(numAdults!=0 || numMinors!=0){\n            Axios.post(\"http://localhost:3001/createBooking\", {\n\n                bookingID: bookingID,\n                numAdults : numAdults,\n                numMinors : numMinors,\n                cost : cost,\n                chosenTimeSlot : chosenTimeSlot,\n\n            }).then(() => {\n                setBookingList([\n                    ...bookingList,\n                    {\n                        bookingID: bookingID,\n                        numAdults : numAdults,\n                        numMinors : numMinors,\n                        cost : cost,\n                        chosenTimeSlot : chosenTimeSlot,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/Books\", {\n                bookingID: bookingID,\n                name: name,\n                numParticipants: numParticipants,\n            }).then(() => {\n                setBooksList([\n                    ...booksList,\n                    {\n                        bookingID: bookingID,\n                        name: name,\n                        numParticipants: numParticipants,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/MakesBooking\", {\n                customerID: custID,     //new\n                bookingID: bookingID,\n                receipt: receipt,\n                agreement: agreement\n            }).then(() => {\n                setMakesList([\n                    ...makesList,\n                    {\n                        customerID: custID,         //new\n                        bookingID: bookingID,\n                        receipt: receipt,\n                        agreement: agreement\n                    },\n                ]);\n            });\n            navigate(\"/bookingConf\")\n        }\n    }\n    };\n\n    return (\n        <div className='cartBlock'>\n            <div className='cartHeader'>\n                <h2>Cart</h2>\n            </div>\n            {excursionInfo.map((val, key) => {\n                return (\n                    <>\n                        <div className='cartExcursionDetails'>\n                            <div className='cartExcursionImg'>\n                                <img src={excursionDetails[index].imgURL} />\n                            </div>\n                            <div className='cartExcursionDetailsText'>\n                                <div className='cartExcursionDetailsTitle'>\n                                    <h3>{val.Name}</h3>\n                                </div>\n                                <div className='cartExcursionDetailsDate'>\n                                    <Form>\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                            <Form.Label>Booking Date: </Form.Label>\n                                            <Form.Select type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setChosenTimeSlot(e.target.value)} required>\n                                                <option value=\"null\">Date and Time</option>\n                                                {timeSlots.map((timeSlots => <option value={timeSlots.TimeSlot}>{timeSlots.Date.substr(0, 10)} @ {timeSlots.Start}:00 MST</option>\n                                                )\n                                                )}\n                                            </Form.Select>\n                                        </Form.Group>\n                                        <div className=\"participants\">\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Adults: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setNumAdults(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                    <option value=\"1\" >1</option>\n                                                    <option value=\"2\" >2</option>\n                                                    <option value=\"3\" >3</option>\n                                                    <option value=\"4\" >4</option>\n                                                    <option value=\"5\" >5</option>\n                                                    <option value=\"6\" >6</option>\n                                                    <option value=\"7\" >7</option>\n                                                    <option value=\"8\" >8</option>\n                                                    <option value=\"9\" >9</option>\n                                                    <option value=\"10\" >10</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Minors: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e) => setNumMinors(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                    <option value=\"1\" >1</option>\n                                                    <option value=\"2\" >2</option>\n                                                    <option value=\"3\" >3</option>\n                                                    <option value=\"4\" >4</option>\n                                                    <option value=\"5\" >5</option>\n                                                    <option value=\"6\" >6</option>\n                                                    <option value=\"7\" >7</option>\n                                                    <option value=\"8\" >8</option>\n                                                    <option value=\"9\" >9</option>\n                                                    <option value=\"10\" >10</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                        </div>\n                                    </Form>\n\n                                    <h4>Cost Per Person: ${val.Cost}.00</h4>\n                                </div>\n                            </div>\n                        </div>\n\n\n                    </>\n                );\n            })};\n            <div className='cartFooter'>\n                <form>\n                    <label>\n                        I understand the risk associated with the above activities. <br /><br />I understand the terms and conditions of service: <br /><br />\n\n                        <input size=\"40\" type=\"text\" name=\"name\" placeholder=\"Signature\" onChange={(e)=>setAgreement(e.target.value)}required />\n                    </label>\n                        <div className=\"completeButton\">\n                            <button className=\"completeStyle\" onClick={(e)=>submitBooking(e)} >Complete Order</button>\n                        </div>\n                </form>\n                <div className=\"subtotal\">\n                    <div className=\"recalculate\">\n                        <button className=\"recalculateButton\" onClick={(e)=>viewUpdateSubtotal(e)}>Update Total Cost</button>\n                    </div>\n                <h4>Subtotal: ${total}.00</h4>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SnowshoeingCart\n","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Cart/KidSkiCart.js",["284","285","286","287","288","289","290"],"import Form from 'react-bootstrap/Form'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Cart.css\"\nimport { useState, useEffect } from 'react'\nimport Axios from \"axios\"\nimport { excursionDetails } from '../../components/excursionDetails'\n\n\n\nconst KidSkiCart = () => {\n\n    const navigate = useNavigate();\n    const [excursionInfo, setExcursionInfo] = useState([]);\n    const [customerID, setCustomerID] = useState([])            //new\n    const customerUser = localStorage.getItem(\"username\")       //new\n    const [timeSlots, setTimeSlots] = useState([]);\n\n\n    const name = \"Kids Ski Lessons\"\n    const index = 4;\n\n    useEffect(() => {\n\n        if(localStorage.getItem(\"loggedIn\")===\"false\"){\n            navigate(\"/login\");\n        }\n\n        Axios.get(\n            `http://localhost:3001/excursionInfo/${name}`\n        ).then((response) => {\n            setExcursionInfo(response.data);\n        });\n        Axios.get(                                                          //new\n            `http://localhost:3001/customer/${customerUser}`\n        ).then((response) => {\n            setCustomerID(response.data)\n        });\n        Axios.get(\n            `http://localhost:3001/timeSlots/${name}`)\n            .then((response) => {\n                setTimeSlots(response.data);\n        });\n    }, []);\n\n      \n    var costPerPerson;\n\n    excursionInfo.map((val) => {\n        costPerPerson = val.Cost;\n    })\n\n    const [bookingList, setBookingList] = useState([]);\n    const [booksList, setBooksList] = useState([]);\n    const [makesList, setMakesList] = useState([]);\n\n    const [total, setTotal] = useState(0);\n    const [numMinors, setNumMinors] = useState(0);\n    const [numAdults, setNumAdults] = useState(0);\n    const [numParticipants, setNumParticipants] = useState(0);\n    \n\n    const viewUpdateSubtotal = (e) => {\n        e.preventDefault();\n        updateParticipants();\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n    }\n\n    const updateSubtotal = () => {\n        const tot = (parseInt(numMinors) + parseInt(numAdults)) * costPerPerson\n        console.log(\"Printing: \" + tot)\n        setTotal(tot)\n        updateParticipants();\n    }\n\n    const updateParticipants = () => {\n        const part = parseInt(numMinors) + parseInt(numAdults);\n        setNumParticipants(part)\n    }\n\n    function makeID(length) {\n        var result           = '';\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n          result += characters.charAt(Math.floor(Math.random() * \n     charactersLength));\n       }\n       return result;\n    }\n\n    const [chosenTimeSlot, setChosenTimeSlot] = useState(\"null\");\n    const bookingID = makeID(8);\n    const cost = total\n    const [agreement, setAgreement] = useState(\"\");\n    const receipt = \"I agree to pay the total cost onsite\"\n\n\n\n    const submitBooking = (e) => {\n            var custID                      //new\n            customerID.map((val) => {\n                custID = val.CustomerID\n            })\n            e.preventDefault();\n            updateSubtotal();\n            updateParticipants();\n            console.log(\"Time Slot:\" + chosenTimeSlot);\n            console.log(\"BookingID:\" + bookingID);\n            console.log(\"Cost:\" + cost);\n            console.log(\"Participants:\" + numParticipants);\n            console.log(\"Agreement Signature:\" + agreement);\n            console.log(\"Minors: \" + numMinors);\n            console.log(\"Adults: \" + numAdults);\n            console.log(\"Total: \" + total)\n\n\n            if(numParticipants !== 0 && chosenTimeSlot != \"null\"){\n                if(numAdults!=0 || numMinors!=0){\n            Axios.post(\"http://localhost:3001/createBooking\", {\n\n                bookingID: bookingID,\n                numAdults : numAdults,\n                numMinors : numMinors,\n                cost : cost,\n                chosenTimeSlot : chosenTimeSlot,\n\n            }).then(() => {\n                setBookingList([\n                    ...bookingList,\n                    {\n                        bookingID: bookingID,\n                        numAdults : numAdults,\n                        numMinors : numMinors,\n                        cost : cost,\n                        chosenTimeSlot : chosenTimeSlot,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/Books\", {\n                bookingID: bookingID,\n                name: name,\n                numParticipants: numParticipants,\n            }).then(() => {\n                setBooksList([\n                    ...booksList,\n                    {\n                        bookingID: bookingID,\n                        name: name,\n                        numParticipants: numParticipants,\n                    },\n                ]);\n            });\n\n            Axios.post(\"http://localhost:3001/MakesBooking\", {\n                customerID: custID,\n                bookingID: bookingID,\n                receipt: receipt,\n                agreement: agreement\n            }).then(() => {\n                setMakesList([\n                    ...makesList,\n                    {\n                        customerID: custID,\n                        bookingID: bookingID,\n                        receipt: receipt,\n                        agreement: agreement\n                    },\n                ]);\n            });\n            navigate(\"/bookingConf\")\n        }\n    }\n    };\n\n    return (\n        <div className='cartBlock'>\n            <div className='cartHeader'>\n                <h2>Cart</h2>\n            </div>\n            {excursionInfo.map((val, key) => {\n                return (\n                    <>\n                        <div className='cartExcursionDetails'>\n                            <div className='cartExcursionImg'>\n                                <img src={excursionDetails[index].imgURL} />\n                            </div>\n                            <div className='cartExcursionDetailsText'>\n                                <div className='cartExcursionDetailsTitle'>\n                                    <h3>{val.Name}</h3>\n                                </div>\n                                <div className='cartExcursionDetailsDate'>\n                                    <Form>\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                            <Form.Label>Booking Date: </Form.Label>\n                                            <Form.Select type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setChosenTimeSlot(e.target.value)} required>\n                                                <option value=\"null\">Date and Time</option>\n                                                {timeSlots.map((timeSlots => <option value={timeSlots.TimeSlot}>{timeSlots.Date.substr(0, 10)} @ {timeSlots.Start}:00 MST</option>\n                                                )\n                                                )}\n                                            </Form.Select>\n                                        </Form.Group>\n                                        <div className=\"participants\">\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Adults: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e)=>setNumAdults(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label>Number of Minors: </Form.Label>\n                                                <Form.Select id=\"numPart\" type=\"email\" placeholder=\"Email Address\" onChange={(e) => setNumMinors(e.target.value)} required>\n                                                    <option value=\"0\" >0</option>\n                                                    <option value=\"1\" >1</option>\n                                                    <option value=\"2\" >2</option>\n                                                    <option value=\"3\" >3</option>\n                                                    <option value=\"4\" >4</option>\n                                                    <option value=\"5\" >5</option>\n                                                    <option value=\"6\" >6</option>\n                                                    <option value=\"7\" >7</option>\n                                                    <option value=\"8\" >8</option>\n                                                    <option value=\"9\" >9</option>\n                                                    <option value=\"10\" >10</option>\n                                                </Form.Select>\n                                            </Form.Group>\n                                        </div>\n                                    </Form>\n\n                                    <h4>Cost Per Person: ${val.Cost}.00</h4>\n                                </div>\n                            </div>\n                        </div>\n\n\n                    </>\n                );\n            })};\n            <div className='cartFooter'>\n                <form>\n                    <label>\n                        I understand the risk associated with the above activities. <br /><br />I understand the terms and conditions of service: <br /><br />\n\n                        <input size=\"40\" type=\"text\" name=\"name\" placeholder=\"Signature\" onChange={(e)=>setAgreement(e.target.value)}required />\n                    </label>\n                        <div className=\"completeButton\">\n                            <button className=\"completeStyle\" onClick={(e)=>submitBooking(e)} >Complete Order</button>\n                        </div>\n                </form>\n                <div className=\"subtotal\">\n                    <div className=\"recalculate\">\n                        <button className=\"recalculateButton\" onClick={(e)=>viewUpdateSubtotal(e)}>Update Total Cost</button>\n                    </div>\n                <h4>Subtotal: ${total}.00</h4>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default KidSkiCart\n","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/BookingConfirmation/BookingConf.js",[],"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Login/Login.js",["291"],"import { useState } from \"react\";\nimport {Form} from \"react-bootstrap\"\nimport { useNavigate } from \"react-router\";\nimport Axios from \"axios\"\nimport \"./Login.css\"\n\nconst Login = () => {\n  const [Username, setUsername] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [accessLevel, setAccessLevel] = useState([]);\n\n  var userAccess = \"test\"\n\n  let navigate = useNavigate();\n\n  const getAccess = () => {\n    Axios.post(\"http://localhost:3001/customerAccess\", {\n      Username: Username,\n    }).then((response) => {\n      setAccessLevel(response.data);\n    })\n    // console.log(\"Printing here\")\n    // console.log(accessLevel)\n\n    accessLevel.map((val) => {\n          userAccess = val.AccessLevel\n        }\n        )\n\n        localStorage.setItem(\"accessLevel\", userAccess);\n  }\n\n\n  const login = (e) => { \n    e.preventDefault();\n    Axios.post(\"http://localhost:3001/login\", {\n      Username: Username,\n      Password: Password,\n    }).then((response) => {\n      if (!response.data.loggedIn) {\n        setErrorMessage(response.data.message);\n        \n      } else {\n        localStorage.setItem(\"loggedIn\", true);\n        localStorage.setItem(\"username\", response.data.username);\n        \n        getAccess();\n        \n        if(localStorage.getItem(\"accessLevel\")===\"Customer\"){    \n        navigate(\"/customerDash\")\n        } else {\n          navigate(\"/calendar\");\n        }\n      }\n    });\n    \n  };\n\n  return (\n    <div className=\"loginRoot\">\n      <h1>Login</h1>\n\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label>Username: </Form.Label>\n          <Form.Control type=\"name\" placeholder=\"Username\" onChange={(e)=> {setUsername(e.target.value)}} required />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password: </Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e)=> {setPassword(e.target.value)}} required />\n        </Form.Group>\n        <div className=\"loginButton\">\n          <button className=\"login\" onMouseMove={()=>getAccess()} onClick={(e)=>login(e)}>Login</button>\n        </div>\n        <h5 style={{ color: \"red\" }}>{errorMessage} </h5>\n      </Form>\n    </div>\n  )\n}\n\nexport default Login","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/CustomerDash/CustomerDash.js",["292","293","294"],"import  Axios  from \"axios\"\nimport {useEffect, useState} from \"react\"\nimport \"./CustomerDash.css\"\nimport { excursionDetails } from \"../../components/excursionDetails\"\nimport { useNavigate } from \"react-router\"\n\nconst CustomerDash = () => {\n    const navigate = useNavigate();\n    const [upcomingExc, setUpcomingExc] = useState([]);\n    const [customerInfo, setCustomerInfo] = useState([]);\n    const Username = localStorage.getItem(\"username\");      \n\n    useEffect(()=> {\n        if(localStorage.getItem(\"loggedIn\")!==\"true\" || localStorage.getItem(\"accessLevel\")!==\"Customer\"){\n            navigate(\"/\")\n        }\n        Axios.get(`http://localhost:3001/customer/${Username}`)\n        .then((response) => {\n            setCustomerInfo(response.data);\n        });\n    }, [])\n\n    useEffect(() => {\n        Axios.get(`http://localhost:3001/customerExcursions/${Username}`)\n        .then((response) => {\n            setUpcomingExc(response.data);\n        });\n    }, []);\n\n    return (\n        <div className=\"customerDash\">\n            <div className=\"dashHead\">\n                {customerInfo.map((val) => {\n                    return(\n                        <div className=\"customerInfo\">\n                            <div>\n                                <h1>Welcome {val.FirstName} !</h1>\n                            </div>\n                            <div>\n                                <h5>Full Name: {val.FirstName} {val.LastName}</h5>\n                                <h5>Address: {val.Address}</h5>\n                                <h5>City: {val.City}</h5>\n                                <h5>Country: {val.Country}</h5>\n                                <h5>Postal Code: {val.PostalCode}</h5>\n                                <h5>Phone Number: {val.PhoneNumber}</h5>\n                                \n                            </div>\n                        </div>\n\n                    );\n                })}\n            </div>\n\n            <h2 className=\"next\">Upcoming Excursions: </h2>\n            {upcomingExc.map((val,key) => {\n                return (\n                    <div className=\"upcoming\">\n                        <h4>Booking ID: {val.BookingID}</h4>  \n                        <div className=\"bookingInfo\">\n                            <div>\n                                <p>Excursion Name: </p>\n                                <h5>{val.ExcursionName}</h5>\n                            </div>\n                            <div>\n                                <p>Date: </p>\n                                <h5>{val.Date.substr(0, 10)}</h5>\n                            </div>\n                            <div>\n                                <p>Time: </p>\n                                <h5>{val.Start}:00 MST</h5>\n                            </div>\n                            <div>\n                                <p>Participants: </p>\n                                <h5>{val.Participants}</h5>\n                            </div>\n                            <div>\n                                <p>Cost: </p>\n                              \n                                <h5>${val.Cost}.00</h5>\n                            </div>\n\n                        </div>\n                    </div>                  \n                );\n            })}\n        </div>\n    )\n  }\n  \n  export default CustomerDash","/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/AuthContext.js",[],"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/Calendar/Calendar.js",["295","296","297","298"],"/Users/Andrea/abenav/classes/cpsc471/CPSC471_FinalProject/client/src/pages/StaffDash/StaffDash.js",["299","300","301"],"import  Axios  from \"axios\"\nimport {useEffect, useState} from \"react\"\nimport \"./StaffDash.css\"\nimport { excursionDetails } from \"../../components/excursionDetails\"\nimport { useNavigate } from \"react-router\"\n\nconst StaffDash = () => {\n    const navigate = useNavigate();\n    const [upcomingShift, setUpcomingShift] = useState([]);\n    const [staffInfo, setStaffInfo] = useState([]);\n    const Username = localStorage.getItem(\"username\");      \n\n    useEffect(()=> {\n        if(localStorage.getItem(\"loggedIn\"!==\"true\") || localStorage.getItem(\"accessLevel\")!==\"General Staff\"){\n            navigate(\"/\");\n        }\n        Axios.get(`http://localhost:3001/staff/${Username}`)\n        .then((response) => {\n            setStaffInfo(response.data);\n        });\n    }, [])\n\n    useEffect(() => {\n        Axios.get(`http://localhost:3001/staffShifts/${Username}`)\n        .then((response) => {\n            setUpcomingShift(response.data);\n        });\n    }, []);\n\n    return (\n        <div className=\"customerDash\">\n            <div className=\"dashHead\">\n                {staffInfo.map((val) => {\n                    return(\n                        <div className=\"customerInfo\">\n                            <div>\n                                <h1>Welcome {val.FirstName} !</h1>\n                            </div>\n                            <div>\n                                <h5>Full Name: {val.FirstName} {val.LastName}</h5>\n                                <h5>Address: {val.Address}</h5>\n                                <h5>City: {val.City}</h5>\n                                <h5>Postal Code: {val.PostalCode}</h5>\n                                <h5>Phone Number: {val.PhoneNumber}</h5>\n                                \n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n\n            <h2 className=\"next\">Upcoming Shifts: </h2>\n            {upcomingShift.map((val,key) => {\n                return (\n                    <div className=\"upcoming\">\n                        {/* <h4>Booking ID: {val.BookingID}</h4>   */}\n                        <div className=\"bookingInfo\">\n                            <div>\n                                <p>Shift Date: </p>\n                                <h5>{val.Date.substr(0,10)}</h5>\n                            </div>\n                            <div>\n                                <p>Shift Start Time: </p>\n                                <h5>{val.Start}:00 MST</h5>\n                            </div>\n                            <div>\n                                <p>Shift End Time: </p>\n                                <h5>{val.End}:00 MST</h5>\n                            </div>\n        \n                        </div>\n                    </div>                  \n                );\n            })}\n        </div>\n    )\n  }\n  \n  export default StaffDash",{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","severity":1,"message":"307","line":95,"column":29,"nodeType":"308","messageId":"309","endLine":95,"endColumn":30,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":21},{"ruleId":"311","severity":1,"message":"315","line":4,"column":46,"nodeType":"313","messageId":"314","endLine":4,"endColumn":55},{"ruleId":"311","severity":1,"message":"316","line":4,"column":57,"nodeType":"313","messageId":"314","endLine":4,"endColumn":70},{"ruleId":"317","severity":1,"message":"318","line":22,"column":41,"nodeType":"319","endLine":22,"endColumn":57},{"ruleId":"317","severity":1,"message":"318","line":11,"column":17,"nodeType":"319","endLine":11,"endColumn":46},{"ruleId":"317","severity":1,"message":"318","line":10,"column":25,"nodeType":"319","endLine":10,"endColumn":74},{"ruleId":"311","severity":1,"message":"320","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":18},{"ruleId":"311","severity":1,"message":"321","line":7,"column":7,"nodeType":"313","messageId":"314","endLine":7,"endColumn":16},{"ruleId":"322","severity":1,"message":"323","line":13,"column":16,"nodeType":"324","messageId":"325","endLine":13,"endColumn":29,"fix":"326"},{"ruleId":"302","replacedBy":"327"},{"ruleId":"304","replacedBy":"328"},{"ruleId":"302","replacedBy":"329"},{"ruleId":"304","replacedBy":"330"},{"ruleId":"311","severity":1,"message":"331","line":53,"column":11,"nodeType":"313","messageId":"314","endLine":53,"endColumn":24},{"ruleId":"317","severity":1,"message":"318","line":123,"column":25,"nodeType":"319","endLine":123,"endColumn":66},{"ruleId":"332","severity":1,"message":"333","line":11,"column":21,"nodeType":"334","messageId":"335","endLine":11,"endColumn":23},{"ruleId":"317","severity":1,"message":"318","line":29,"column":29,"nodeType":"319","endLine":29,"endColumn":70},{"ruleId":"336","severity":1,"message":"337","line":17,"column":9,"nodeType":"338","endLine":17,"endColumn":41},{"ruleId":"311","severity":1,"message":"339","line":27,"column":11,"nodeType":"313","messageId":"314","endLine":27,"endColumn":22},{"ruleId":"317","severity":1,"message":"318","line":40,"column":37,"nodeType":"319","endLine":40,"endColumn":53},{"ruleId":"332","severity":1,"message":"333","line":7,"column":17,"nodeType":"334","messageId":"335","endLine":7,"endColumn":19},{"ruleId":"332","severity":1,"message":"333","line":7,"column":19,"nodeType":"334","messageId":"335","endLine":7,"endColumn":21},{"ruleId":"332","severity":1,"message":"333","line":7,"column":19,"nodeType":"334","messageId":"335","endLine":7,"endColumn":21},{"ruleId":"332","severity":1,"message":"333","line":7,"column":17,"nodeType":"334","messageId":"335","endLine":7,"endColumn":19},{"ruleId":"332","severity":1,"message":"333","line":7,"column":18,"nodeType":"334","messageId":"335","endLine":7,"endColumn":20},{"ruleId":"332","severity":1,"message":"333","line":7,"column":22,"nodeType":"334","messageId":"335","endLine":7,"endColumn":24},{"ruleId":"336","severity":1,"message":"340","line":43,"column":8,"nodeType":"341","endLine":43,"endColumn":10,"suggestions":"342"},{"ruleId":"343","severity":1,"message":"344","line":50,"column":29,"nodeType":"345","messageId":"346","endLine":50,"endColumn":31},{"ruleId":"343","severity":1,"message":"344","line":104,"column":34,"nodeType":"345","messageId":"346","endLine":104,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":120,"column":56,"nodeType":"349","messageId":"335","endLine":120,"endColumn":58},{"ruleId":"347","severity":1,"message":"348","line":121,"column":29,"nodeType":"349","messageId":"335","endLine":121,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":121,"column":45,"nodeType":"349","messageId":"335","endLine":121,"endColumn":47},{"ruleId":"317","severity":1,"message":"318","line":189,"column":33,"nodeType":"319","endLine":189,"endColumn":77},{"ruleId":"311","severity":1,"message":"350","line":2,"column":8,"nodeType":"313","messageId":"314","endLine":2,"endColumn":14},{"ruleId":"336","severity":1,"message":"351","line":45,"column":8,"nodeType":"341","endLine":45,"endColumn":10,"suggestions":"352"},{"ruleId":"343","severity":1,"message":"344","line":51,"column":31,"nodeType":"345","messageId":"346","endLine":51,"endColumn":33},{"ruleId":"336","severity":1,"message":"340","line":45,"column":8,"nodeType":"341","endLine":45,"endColumn":10,"suggestions":"353"},{"ruleId":"343","severity":1,"message":"344","line":52,"column":29,"nodeType":"345","messageId":"346","endLine":52,"endColumn":31},{"ruleId":"343","severity":1,"message":"344","line":107,"column":34,"nodeType":"345","messageId":"346","endLine":107,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":123,"column":56,"nodeType":"349","messageId":"335","endLine":123,"endColumn":58},{"ruleId":"347","severity":1,"message":"348","line":124,"column":29,"nodeType":"349","messageId":"335","endLine":124,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":124,"column":45,"nodeType":"349","messageId":"335","endLine":124,"endColumn":47},{"ruleId":"317","severity":1,"message":"318","line":192,"column":33,"nodeType":"319","endLine":192,"endColumn":77},{"ruleId":"336","severity":1,"message":"340","line":43,"column":8,"nodeType":"341","endLine":43,"endColumn":10,"suggestions":"354"},{"ruleId":"343","severity":1,"message":"344","line":50,"column":29,"nodeType":"345","messageId":"346","endLine":50,"endColumn":31},{"ruleId":"343","severity":1,"message":"344","line":104,"column":34,"nodeType":"345","messageId":"346","endLine":104,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":120,"column":56,"nodeType":"349","messageId":"335","endLine":120,"endColumn":58},{"ruleId":"347","severity":1,"message":"348","line":121,"column":29,"nodeType":"349","messageId":"335","endLine":121,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":121,"column":45,"nodeType":"349","messageId":"335","endLine":121,"endColumn":47},{"ruleId":"317","severity":1,"message":"318","line":189,"column":33,"nodeType":"319","endLine":189,"endColumn":77},{"ruleId":"336","severity":1,"message":"340","line":42,"column":8,"nodeType":"341","endLine":42,"endColumn":10,"suggestions":"355"},{"ruleId":"343","severity":1,"message":"344","line":47,"column":29,"nodeType":"345","messageId":"346","endLine":47,"endColumn":31},{"ruleId":"343","severity":1,"message":"344","line":101,"column":34,"nodeType":"345","messageId":"346","endLine":101,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":117,"column":56,"nodeType":"349","messageId":"335","endLine":117,"endColumn":58},{"ruleId":"347","severity":1,"message":"348","line":118,"column":29,"nodeType":"349","messageId":"335","endLine":118,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":118,"column":45,"nodeType":"349","messageId":"335","endLine":118,"endColumn":47},{"ruleId":"317","severity":1,"message":"318","line":186,"column":33,"nodeType":"319","endLine":186,"endColumn":77},{"ruleId":"336","severity":1,"message":"340","line":44,"column":8,"nodeType":"341","endLine":44,"endColumn":10,"suggestions":"356"},{"ruleId":"343","severity":1,"message":"344","line":49,"column":29,"nodeType":"345","messageId":"346","endLine":49,"endColumn":31},{"ruleId":"343","severity":1,"message":"344","line":104,"column":34,"nodeType":"345","messageId":"346","endLine":104,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":120,"column":56,"nodeType":"349","messageId":"335","endLine":120,"endColumn":58},{"ruleId":"347","severity":1,"message":"348","line":121,"column":29,"nodeType":"349","messageId":"335","endLine":121,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":121,"column":45,"nodeType":"349","messageId":"335","endLine":121,"endColumn":47},{"ruleId":"317","severity":1,"message":"318","line":189,"column":33,"nodeType":"319","endLine":189,"endColumn":77},{"ruleId":"336","severity":1,"message":"340","line":43,"column":8,"nodeType":"341","endLine":43,"endColumn":10,"suggestions":"357"},{"ruleId":"343","severity":1,"message":"344","line":48,"column":29,"nodeType":"345","messageId":"346","endLine":48,"endColumn":31},{"ruleId":"343","severity":1,"message":"344","line":103,"column":34,"nodeType":"345","messageId":"346","endLine":103,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":119,"column":56,"nodeType":"349","messageId":"335","endLine":119,"endColumn":58},{"ruleId":"347","severity":1,"message":"348","line":120,"column":29,"nodeType":"349","messageId":"335","endLine":120,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":120,"column":45,"nodeType":"349","messageId":"335","endLine":120,"endColumn":47},{"ruleId":"317","severity":1,"message":"318","line":188,"column":33,"nodeType":"319","endLine":188,"endColumn":77},{"ruleId":"343","severity":1,"message":"344","line":26,"column":27,"nodeType":"345","messageId":"346","endLine":26,"endColumn":29},{"ruleId":"311","severity":1,"message":"358","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":26},{"ruleId":"336","severity":1,"message":"359","line":21,"column":8,"nodeType":"341","endLine":21,"endColumn":10,"suggestions":"360"},{"ruleId":"336","severity":1,"message":"361","line":28,"column":8,"nodeType":"341","endLine":28,"endColumn":10,"suggestions":"362"},{"ruleId":"311","severity":1,"message":"363","line":20,"column":13,"nodeType":"313","messageId":"314","endLine":20,"endColumn":21},{"ruleId":"311","severity":1,"message":"364","line":56,"column":13,"nodeType":"313","messageId":"314","endLine":56,"endColumn":21},{"ruleId":"343","severity":1,"message":"344","line":59,"column":29,"nodeType":"345","messageId":"346","endLine":59,"endColumn":31},{"ruleId":"343","severity":1,"message":"344","line":72,"column":29,"nodeType":"345","messageId":"346","endLine":72,"endColumn":31},{"ruleId":"311","severity":1,"message":"358","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":26},{"ruleId":"336","severity":1,"message":"359","line":21,"column":8,"nodeType":"341","endLine":21,"endColumn":10,"suggestions":"365"},{"ruleId":"336","severity":1,"message":"361","line":28,"column":8,"nodeType":"341","endLine":28,"endColumn":10,"suggestions":"366"},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"no-useless-escape","Unnecessary escape character: \\s.","Literal","unnecessaryEscape",["369","370"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'LinkContainer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'observer' is defined but never used.","'LoginPage' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"371","text":"372"},["367"],["368"],["367"],["368"],"'submitBooking' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'checkStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customerUser' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["373"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'customerCount'. Either include it or remove the dependency array.",["374"],["375"],["376"],["377"],["378"],["379"],"'excursionDetails' is defined but never used.","React Hook useEffect has missing dependencies: 'Username' and 'navigate'. Either include them or remove the dependency array.",["380"],"React Hook useEffect has a missing dependency: 'Username'. Either include it or remove the dependency array.",["381"],"'Username' is assigned a value but never used.","'mapTimes' is assigned a value but never used.",["382"],["383"],"no-global-assign","no-unsafe-negation",{"messageId":"384","fix":"385","desc":"386"},{"messageId":"387","fix":"388","desc":"389"},[256,256],"()",{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"390","fix":"394"},{"desc":"390","fix":"395"},{"desc":"390","fix":"396"},{"desc":"390","fix":"397"},{"desc":"390","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"399","fix":"403"},{"desc":"401","fix":"404"},"removeEscape",{"range":"405","text":"406"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"407","text":"408"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [customerUser, navigate]",{"range":"409","text":"410"},"Update the dependencies array to be: [customerCount]",{"range":"411","text":"412"},{"range":"413","text":"410"},{"range":"414","text":"410"},{"range":"415","text":"410"},{"range":"416","text":"410"},{"range":"417","text":"410"},"Update the dependencies array to be: [Username, navigate]",{"range":"418","text":"419"},"Update the dependencies array to be: [Username]",{"range":"420","text":"421"},{"range":"422","text":"419"},{"range":"423","text":"421"},[10727,10728],"",[10727,10727],"\\",[1313,1315],"[customerUser, navigate]",[1623,1625],"[customerCount]",[1315,1317],[1305,1307],[1306,1308],[1312,1314],[1311,1313],[773,775],"[Username, navigate]",[966,968],"[Username]",[765,767],[953,955]]