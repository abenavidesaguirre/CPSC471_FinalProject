{"version":3,"file":"index.modern.js","sources":["../src/dateValidation.ts","../src/dateMap.tsx","../src/helpers.ts","../src/styles.ts","../src/index.tsx"],"sourcesContent":["/**\n * Build a date from input\n * @param {string} day\n * @param {string} month\n * @param {string} year\n */\nconst buildDateFromInput = (day: string, month: string, year: string) => {\n  const date = new Date(Number(year), Number(month) - 1, Number(day));\n  return date;\n};\n\n/**\n * Check if the date value is a valid Date object and that it matches the values it was created from\n * @param date Date\n * @param day string\n * @param month string\n * @param year string\n */\nconst isValidDateObject = (\n  date: Date,\n  day: string,\n  month: string,\n  year: string,\n) => {\n  const isDate = Object.prototype.toString.call(date) === '[object Date]';\n  const dayMatch = date.getDate() === Number(day);\n  const monthMatch = date.getMonth() === Number(month) - 1;\n  const yearMatch = date.getFullYear() === Number(year);\n\n  return isDate && dayMatch && monthMatch && yearMatch;\n};\n\n/**\n * Determine if provided date is a valid date and falls between date range\n * @param {string} day\n * @param {string} month\n * @param {string} year\n * @param {object} props\n */\nconst isValidDate = (day: string, month: string, year: string, props: any) => {\n  const userDate = buildDateFromInput(day, month, year);\n\n  // Must be a valid date\n  if (!isValidDateObject(userDate, day, month, year)) {\n    return props.invalidMessage || 'Not a valid date';\n  }\n\n  // Must be same or before max date\n  if (props.maxDate) {\n    const { maxDate } = props;\n    if (userDate > maxDate) {\n      const maxDatePlusOne = new Date(maxDate);\n      maxDatePlusOne.setDate(maxDatePlusOne.getDate() + 1);\n\n      return (\n        props.maxDateMessage ||\n        `Date must be less than ${maxDatePlusOne.toDateString().substring(3)}`\n      );\n    }\n  }\n\n  // Must be same or after min date\n  if (props.minDate) {\n    const { minDate } = props;\n    if (userDate < minDate) {\n      const minDateMinusOne = new Date(minDate);\n      minDateMinusOne.setDate(minDateMinusOne.getDate() - 1);\n\n      return (\n        props.minDateMessage ||\n        `Date must be greater than ${minDateMinusOne\n          .toDateString()\n          .substring(3)}`\n      );\n    }\n  }\n\n  return '';\n};\n\nexport { isValidDate, buildDateFromInput };\n","import React from 'react';\n\nconst MONTHMAP = {\n  1: 'January',\n  2: 'February',\n  3: 'March',\n  4: 'April',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'August',\n  9: 'September',\n  10: 'October',\n  11: 'November',\n  12: 'December',\n};\n\nconst getDays = (showPlaceholder: boolean, dayLabel: string) => {\n  const days = [];\n\n  days.push(\n    <option value=\"\" disabled>\n      {showPlaceholder ? dayLabel || 'Day' : ''}\n    </option>,\n  );\n\n  for (let i = 1; i <= 31; i += 1) {\n    days.push(<option value={`${i}`}>{i}</option>);\n  }\n\n  return days;\n};\n\nconst getMonths = (\n  showPlaceholder: boolean,\n  monthLabel: string,\n  monthNames: Array<string> | undefined,\n) => {\n  const months = [];\n\n  months.push(\n    <option value=\"\" disabled>\n      {showPlaceholder ? monthLabel || 'Month' : ''}\n    </option>,\n  );\n\n  for (let i = 1; i <= 12; i += 1) {\n    months.push(\n      <option value={`${i}`}>\n        {monthNames ? monthNames[i - 1] : MONTHMAP[i]}\n      </option>,\n    );\n  }\n\n  return months;\n};\n\nconst getYears = (\n  max: Date | undefined,\n  min: Date | undefined,\n  showPlaceholder: boolean,\n  value: string,\n  yearLabel: string,\n) => {\n  const years = [];\n  let maxYear;\n  let minYear;\n\n  if (max !== undefined) {\n    maxYear = max.getFullYear();\n  } else {\n    maxYear = new Date().getFullYear();\n  }\n\n  if (min !== undefined) {\n    minYear = min.getFullYear();\n  } else {\n    minYear = 1900;\n  }\n\n  if (value) {\n    if (Number(value) > maxYear) {\n      maxYear = Number(value);\n    }\n\n    if (Number(value) < minYear) {\n      minYear = Number(value);\n    }\n  }\n\n  years.push(\n    <option value=\"\" disabled>\n      {showPlaceholder ? yearLabel || 'Year' : ''}\n    </option>,\n  );\n\n  for (let i = maxYear; i >= minYear; i -= 1) {\n    years.push(<option value={`${i}`}>{i}</option>);\n  }\n\n  return years;\n};\n\nexport { getDays, getMonths, getYears };\n","import { IDate } from './interfaces';\n\n/**\n * Parse date object into day, month, year state\n */\nexport const spreadDateToObject = (dateValue: Date | null): IDate => {\n  return {\n    day: dateValue ? `${dateValue.getDate()}` : '',\n    month: dateValue ? `${dateValue.getMonth() + 1}` : '',\n    year: dateValue ? `${dateValue.getFullYear()}` : '',\n  };\n};\n","export const flex: React.CSSProperties = {\n  display: 'flex',\n};\n\nexport const flexColumn: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n};\n","/* eslint-disable react/no-array-index-key */\nimport React, {\n  useState,\n  useCallback,\n  ChangeEvent,\n  useMemo,\n  useEffect,\n} from 'react';\nimport { isValidDate, buildDateFromInput } from './dateValidation';\nimport { getDays, getMonths, getYears } from './dateMap';\nimport { IDate, ISelectDatePicker } from './interfaces';\nimport { spreadDateToObject } from './helpers';\nimport { flex, flexColumn } from './styles';\n\nconst SelectDatepicker: React.FC<ISelectDatePicker> = (props) => {\n  const [isDirty, setIsDirty] = useState<boolean>(true);\n  const [hasError, setHasError] = useState<boolean>(false);\n  const [error, setError] = useState<string>();\n  const [date, setDate] = useState<IDate>(spreadDateToObject(props.value));\n\n  const orderArray = useMemo(() => props.format!.split('/'), [props.format]);\n\n  /**\n   * Call onDateChange prop with the provided date object\n   */\n  const onDateChange = useCallback(\n    (newDate) => {\n      props.onDateChange(newDate);\n    },\n    [props],\n  );\n\n  /**\n   * Build a Date object and call the onDateChange function\n   */\n  const validDateChange = useCallback(() => {\n    const newDate = buildDateFromInput(date.day, date.month, date.year);\n    onDateChange(newDate);\n  }, [date.day, date.month, date.year, onDateChange]);\n\n  /**\n   * Sets the error state and calls the onDateChange function with a null value\n   */\n  const renderError = useCallback(\n    (err, hasErr) => {\n      setError(err);\n      setHasError(hasErr);\n      onDateChange(null);\n    },\n    [onDateChange],\n  );\n\n  /**\n   * Validates if a the inputs form a valid date\n   * Returns null if values are not set\n   * Returns null and errors if date is not valid\n   * Returns a valid date object when everything passes\n   */\n  const validate = useCallback(() => {\n    const { day, month, year } = date;\n\n    // Must contain values\n    if (!day || !month || !year) {\n      onDateChange(null);\n      return;\n    }\n\n    // Validate date input\n    const errorString = isValidDate(day, month, year, props);\n    if (errorString !== '') {\n      renderError(errorString, true);\n      return;\n    }\n\n    validDateChange();\n  }, [date, onDateChange, props, renderError, validDateChange]);\n\n  /**\n   * Sets the date state when an input value changes\n   */\n  const onInputChange = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      setDate({ ...date, [e.target.name]: e.target.value });\n      setIsDirty(true);\n    },\n    [date],\n  );\n\n  /**\n   * Create an input field with a form label\n   */\n  const inputField = useCallback(\n    (id, label, value, options) => {\n      const className = `rsd_${id}-container`;\n\n      return (\n        <div className={`${className}`} style={flexColumn}>\n          {props.showLabels ? <label htmlFor={id}>{label}</label> : null}\n          <select\n            className={`${hasError ? 'has-error' : ''}`}\n            id={id}\n            name={id}\n            value={value}\n            onChange={onInputChange}>\n            {options.map((option: string, i: number) => {\n              return (\n                <React.Fragment key={`${option}-${i}`}>{option}</React.Fragment>\n              );\n            })}\n          </select>\n        </div>\n      );\n    },\n    [hasError, onInputChange, props.showLabels],\n  );\n\n  /**\n   * Creates an object with all input field elements\n   */\n  const dateField = useMemo(() => {\n    const { showPlaceholders, monthNames, maxDate, minDate, labels } = props;\n\n    const dayLabel = (labels && labels.day) || 'Day';\n    const monthLabel = (labels && labels.month) || 'Month';\n    const yearLabel = (labels && labels.year) || 'Year';\n\n    const fields = {\n      day: inputField(\n        'day',\n        dayLabel,\n        date.day,\n        getDays(showPlaceholders!, dayLabel),\n      ),\n      month: inputField(\n        'month',\n        monthLabel,\n        date.month,\n        getMonths(showPlaceholders!, monthLabel, monthNames),\n      ),\n      year: inputField(\n        'year',\n        yearLabel,\n        date.year,\n        getYears(maxDate, minDate, showPlaceholders!, date.year, yearLabel),\n      ),\n    };\n\n    return fields;\n  }, [date.day, date.month, date.year, inputField, props]);\n\n  /**\n   * When ever the date state changes then clear errors and validate the date\n   */\n  useEffect(() => {\n    if (isDirty) {\n      setError('');\n      setHasError(false);\n      validate();\n      setIsDirty(false);\n    }\n  }, [isDirty]);\n\n  useEffect(() => {\n    const { value } = props;\n    const { day, month, year } = date;\n\n    if (value !== null && value !== buildDateFromInput(day, month, year)) {\n      setDate(spreadDateToObject(value));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  return (\n    <div className={`rsd ${props.className}`}>\n      <div className=\"rsd_date-container\" style={flex}>\n        {orderArray.map((key, i) => {\n          return (\n            <React.Fragment key={`${key}-${i}`}>\n              {dateField[key]}\n            </React.Fragment>\n          );\n        })}\n      </div>\n      {props.showErrors && hasError && (\n        <div className=\"error-message\">{error}</div>\n      )}\n    </div>\n  );\n};\n\nexport default SelectDatepicker;\n\nSelectDatepicker.defaultProps = {\n  value: null,\n  showLabels: true,\n  showPlaceholders: true,\n  showErrors: true,\n  format: 'month/day/year',\n  className: '',\n};\n"],"names":["buildDateFromInput","day","month","year","date","Date","Number","isValidDateObject","isDate","Object","prototype","toString","call","dayMatch","getDate","monthMatch","getMonth","yearMatch","getFullYear","isValidDate","props","userDate","invalidMessage","maxDate","maxDatePlusOne","setDate","maxDateMessage","toDateString","substring","minDate","minDateMinusOne","minDateMessage","MONTHMAP","getDays","showPlaceholder","dayLabel","days","push","React","value","disabled","i","getMonths","monthLabel","monthNames","months","getYears","max","min","yearLabel","years","maxYear","minYear","undefined","spreadDateToObject","dateValue","flex","display","flexColumn","flexDirection","SelectDatepicker","useState","isDirty","setIsDirty","hasError","setHasError","error","setError","orderArray","useMemo","format","split","onDateChange","useCallback","newDate","validDateChange","renderError","err","hasErr","validate","errorString","onInputChange","e","target","name","inputField","id","label","options","className","style","showLabels","htmlFor","onChange","map","option","Fragment","key","dateField","showPlaceholders","labels","fields","useEffect","showErrors","defaultProps"],"mappings":"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"}